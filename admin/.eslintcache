[{"/Users/ashleydyson/Documents/Petio/petio/admin/src/page/Setup.js":"1","/Users/ashleydyson/Documents/Petio/petio/admin/src/data/Plex/api.js":"2","/Users/ashleydyson/Documents/Petio/petio/admin/src/components/Cpu.js":"3","/Users/ashleydyson/Documents/Petio/petio/admin/src/data/Api/api.js":"4","/Users/ashleydyson/Documents/Petio/petio/admin/src/data/User/api.js":"5","/Users/ashleydyson/Documents/Petio/petio/admin/src/page/Dashboard.js":"6","/Users/ashleydyson/Documents/Petio/petio/admin/src/data/Plex/reducer.js":"7","/Users/ashleydyson/Documents/Petio/petio/admin/src/components/RequestCard.js":"8","/Users/ashleydyson/Documents/Petio/petio/admin/src/components/Ram.js":"9","/Users/ashleydyson/Documents/Petio/petio/admin/src/index.js":"10","/Users/ashleydyson/Documents/Petio/petio/admin/src/App.js":"11","/Users/ashleydyson/Documents/Petio/petio/admin/src/serviceWorker.js":"12","/Users/ashleydyson/Documents/Petio/petio/admin/src/data/store.js":"13","/Users/ashleydyson/Documents/Petio/petio/admin/src/components/Sidebar.js":"14","/Users/ashleydyson/Documents/Petio/petio/admin/src/components/Login.js":"15","/Users/ashleydyson/Documents/Petio/petio/admin/src/page/Settings.js":"16","/Users/ashleydyson/Documents/Petio/petio/admin/src/data/reducers.js":"17","/Users/ashleydyson/Documents/Petio/petio/admin/src/data/Api/index.js":"18","/Users/ashleydyson/Documents/Petio/petio/admin/src/components/CarouselLoading.js":"19","/Users/ashleydyson/Documents/Petio/petio/admin/src/components/Carousel.js":"20","/Users/ashleydyson/Documents/Petio/petio/admin/src/components/Bandwidth.js":"21","/Users/ashleydyson/Documents/Petio/petio/admin/src/components/Sessions.js":"22","/Users/ashleydyson/Documents/Petio/petio/admin/src/data/User/reducer.js":"23","/Users/ashleydyson/Documents/Petio/petio/admin/src/data/Api/reducer.js":"24","/Users/ashleydyson/Documents/Petio/petio/admin/src/page/settings/radarr.js":"25","/Users/ashleydyson/Documents/Petio/petio/admin/src/page/settings/general.js":"26","/Users/ashleydyson/Documents/Petio/petio/admin/src/page/settings/sonarr.js":"27","/Users/ashleydyson/Documents/Petio/petio/admin/src/data/Api/actions.js":"28","/Users/ashleydyson/Documents/Petio/petio/admin/src/data/User/index.js":"29","/Users/ashleydyson/Documents/Petio/petio/admin/src/data/Plex/index.js":"30","/Users/ashleydyson/Documents/Petio/petio/admin/src/components/SessionMedia.js":"31","/Users/ashleydyson/Documents/Petio/petio/admin/src/data/actionTypes.js":"32","/Users/ashleydyson/Documents/Petio/petio/admin/src/data/User/actions.js":"33","/Users/ashleydyson/Documents/Petio/petio/admin/src/data/Plex/actions.js":"34","/Users/ashleydyson/Documents/Petio/petio/admin/src/components/MovieCard.js":"35","/Users/ashleydyson/Documents/Petio/petio/admin/src/components/TvCard.js":"36","/Users/ashleydyson/Documents/Petio/petio/admin/src/page/Requests.js":"37","/Users/ashleydyson/Documents/Petio/petio/admin/src/components/RequestsTable.js":"38","/Users/ashleydyson/Documents/Petio/petio/admin/src/page/settings/modal.js":"39","/Users/ashleydyson/Documents/Petio/petio/admin/src/page/Users.js":"40"},{"size":12659,"mtime":1610389736279,"results":"41","hashOfConfig":"42"},{"size":1535,"mtime":1610294389111,"results":"43","hashOfConfig":"42"},{"size":1350,"mtime":1607428895037,"results":"44","hashOfConfig":"42"},{"size":6756,"mtime":1610378198891,"results":"45","hashOfConfig":"42"},{"size":999,"mtime":1610127840251,"results":"46","hashOfConfig":"42"},{"size":5984,"mtime":1608126960829,"results":"47","hashOfConfig":"42"},{"size":578,"mtime":1610296650398,"results":"48","hashOfConfig":"42"},{"size":2220,"mtime":1607616419194,"results":"49","hashOfConfig":"42"},{"size":1409,"mtime":1607428895037,"results":"50","hashOfConfig":"42"},{"size":569,"mtime":1607707386861,"results":"51","hashOfConfig":"42"},{"size":3939,"mtime":1609945737635,"results":"52","hashOfConfig":"42"},{"size":5086,"mtime":1607428895043,"results":"53","hashOfConfig":"42"},{"size":376,"mtime":1607428895041,"results":"54","hashOfConfig":"42"},{"size":3759,"mtime":1610129970533,"results":"55","hashOfConfig":"42"},{"size":2757,"mtime":1610123862956,"results":"56","hashOfConfig":"42"},{"size":2297,"mtime":1607707386861,"results":"57","hashOfConfig":"42"},{"size":236,"mtime":1607428895041,"results":"58","hashOfConfig":"42"},{"size":848,"mtime":1610378275445,"results":"59","hashOfConfig":"42"},{"size":1744,"mtime":1607428895036,"results":"60","hashOfConfig":"42"},{"size":292,"mtime":1607428895036,"results":"61","hashOfConfig":"42"},{"size":1707,"mtime":1607428895036,"results":"62","hashOfConfig":"42"},{"size":7152,"mtime":1607463865112,"results":"63","hashOfConfig":"42"},{"size":703,"mtime":1608131361372,"results":"64","hashOfConfig":"42"},{"size":3519,"mtime":1609944869698,"results":"65","hashOfConfig":"42"},{"size":9416,"mtime":1609699872428,"results":"66","hashOfConfig":"42"},{"size":5904,"mtime":1607958171759,"results":"67","hashOfConfig":"42"},{"size":9349,"mtime":1609699877034,"results":"68","hashOfConfig":"42"},{"size":8842,"mtime":1610378652008,"results":"69","hashOfConfig":"42"},{"size":108,"mtime":1607428895042,"results":"70","hashOfConfig":"42"},{"size":70,"mtime":1607428895041,"results":"71","hashOfConfig":"42"},{"size":3152,"mtime":1607428895038,"results":"72","hashOfConfig":"42"},{"size":763,"mtime":1610296298852,"results":"73","hashOfConfig":"42"},{"size":1636,"mtime":1608131317646,"results":"74","hashOfConfig":"42"},{"size":4397,"mtime":1610389687187,"results":"75","hashOfConfig":"42"},{"size":3682,"mtime":1607428895037,"results":"76","hashOfConfig":"42"},{"size":3631,"mtime":1607428895039,"results":"77","hashOfConfig":"42"},{"size":1820,"mtime":1609101846442,"results":"78","hashOfConfig":"42"},{"size":11479,"mtime":1609107155469,"results":"79","hashOfConfig":"42"},{"size":4673,"mtime":1609699996187,"results":"80","hashOfConfig":"42"},{"size":1147,"mtime":1609946163893,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xc4gh7",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"86"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"86"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"86"},"/Users/ashleydyson/Documents/Petio/petio/admin/src/page/Setup.js",[],"/Users/ashleydyson/Documents/Petio/petio/admin/src/data/Plex/api.js",[],["183","184"],"/Users/ashleydyson/Documents/Petio/petio/admin/src/components/Cpu.js",["185"],"import React from 'react';\nimport {\n\tLineChart,\n\tLine,\n\tXAxis,\n\tYAxis,\n\tCartesianGrid,\n\tTooltip,\n\tLegend,\n\tResponsiveContainer,\n} from 'recharts';\n\nclass Cpu extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\tlet height = window.innerWidth >= 992 ? 300 : 200;\n\t\tlet margin =\n\t\t\twindow.innerWidth >= 992\n\t\t\t\t? { top: 10, right: 0, left: -40, bottom: 0 }\n\t\t\t\t: { top: 10, right: 0, left: -60, bottom: 0 };\n\t\tconst formatter = (value) => value;\n\t\treturn (\n\t\t\t<ResponsiveContainer width=\"100%\" height={height}>\n\t\t\t\t<LineChart data={this.props.cpu} margin={margin}>\n\t\t\t\t\t<XAxis dataKey=\"at\" />\n\t\t\t\t\t<YAxis\n\t\t\t\t\t\ttickFormatter={formatter}\n\t\t\t\t\t\tallowDecimals={false}\n\t\t\t\t\t\tticks={[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]}\n\t\t\t\t\t\tinterval={0}\n\t\t\t\t\t/>\n\t\t\t\t\t<CartesianGrid />\n\t\t\t\t\t<Tooltip />\n\t\t\t\t\t<Legend iconType=\"circle\" align=\"right\" />\n\t\t\t\t\t<Line\n\t\t\t\t\t\ttype=\"monotone\"\n\t\t\t\t\t\tdataKey=\"processCpuUtilization\"\n\t\t\t\t\t\tstroke=\"#9ad186\"\n\t\t\t\t\t\tdot={false}\n\t\t\t\t\t\tstrokeWidth={2}\n\t\t\t\t\t\tactiveDot={{ r: 8 }}\n\t\t\t\t\t\tisAnimationActive={false}\n\t\t\t\t\t\tname=\"Plex\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Line\n\t\t\t\t\t\ttype=\"monotone\"\n\t\t\t\t\t\tdataKey=\"hostCpuUtilization\"\n\t\t\t\t\t\tstroke=\"#f1335e\"\n\t\t\t\t\t\tdot={false}\n\t\t\t\t\t\tstrokeWidth={2}\n\t\t\t\t\t\tisAnimationActive={false}\n\t\t\t\t\t\tname=\"System\"\n\t\t\t\t\t/>\n\t\t\t\t</LineChart>\n\t\t\t</ResponsiveContainer>\n\t\t);\n\t}\n}\n\nexport default Cpu;\n","/Users/ashleydyson/Documents/Petio/petio/admin/src/data/Api/api.js",[],"/Users/ashleydyson/Documents/Petio/petio/admin/src/data/User/api.js",[],"/Users/ashleydyson/Documents/Petio/petio/admin/src/page/Dashboard.js",["186","187","188","189","190","191"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport Api from '../data/Api';\nimport User from '../data/User';\nimport Carousel from '../components/Carousel';\nimport CarouselLoading from '../components/CarouselLoading';\nimport RequestCard from '../components/RequestCard';\nimport Bandwidth from '../components/Bandwidth';\nimport Cpu from '../components/Cpu';\nimport Ram from '../components/Ram';\nimport Sessions from '../components/Sessions';\n\nNumber.prototype.round = function (places) {\n\treturn +(Math.round(this + 'e+' + places) + 'e-' + places);\n};\n\nclass Dashboard extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\trequests: false,\n\t\t\tpending: false,\n\t\t\tbandwidth: false,\n\t\t\tserverInfo: false,\n\t\t\tsessions: false,\n\t\t\tsessionsCollapsed: true,\n\t\t};\n\n\t\tthis.getRequests = this.getRequests.bind(this);\n\t\tthis.toggleSessions = this.toggleSessions.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tif (!this.state.pending && !this.state.requests) {\n\t\t\tthis.getRequests();\n\t\t}\n\t\tthis.pollServer();\n\t\tthis.pollServerDelay();\n\t\tthis.heartbeat = setInterval(() => this.pollServer(), 1000);\n\t\tthis.heartbeatDelay = setInterval(() => this.pollServerDelay(), 10000);\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (!this.state.pending && !this.state.requests) {\n\t\t\tthis.getRequests();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.heartbeat);\n\t\tclearInterval(this.heartbeatDelay);\n\t}\n\n\ttimeDifference(previous) {\n\t\tlet now = new Date();\n\t\tlet current = Math.round(now.getTime() / 1000);\n\t\tprevious = new Date(previous);\n\t\tvar msPerMinute = 60;\n\t\tvar msPerHour = msPerMinute * 60;\n\t\tvar msPerDay = msPerHour * 24;\n\n\t\tvar elapsed = current - previous;\n\n\t\t// return elapsed;\n\n\t\tif (elapsed < msPerMinute) {\n\t\t\treturn Math.round(elapsed) + 's';\n\t\t} else if (elapsed < msPerHour) {\n\t\t\tlet minutes = Math.floor(elapsed / msPerMinute);\n\t\t\tlet seconds = elapsed - minutes * 60;\n\t\t\tif (minutes === 2 && seconds > 1) return false;\n\t\t\treturn `${minutes}m${seconds}s`;\n\t\t} else {\n\t\t\treturn current;\n\t\t}\n\t}\n\n\tpollServer() {\n\t\tApi.bandwidth()\n\t\t\t.then((res) => {\n\t\t\t\t// console.log(res);\n\t\t\t\tlet data = {};\n\t\t\t\tlet bWidth = [];\n\t\t\t\tres.forEach((el) => {\n\t\t\t\t\tlet type = el['lan'] ? 'Local' : 'Remote';\n\t\t\t\t\tlet timestamp = el['at'];\n\t\t\t\t\tif (data[timestamp]) {\n\t\t\t\t\t\tdata[timestamp][type] += el['bytes'] * 8;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet time = this.timeDifference(timestamp);\n\t\t\t\t\t\tif (!time) return;\n\t\t\t\t\t\tdata[timestamp] = {};\n\t\t\t\t\t\tdata[timestamp].name = time;\n\t\t\t\t\t\tdata[timestamp].Local = 0;\n\t\t\t\t\t\tdata[timestamp].Remote = 0;\n\t\t\t\t\t\tdata[timestamp][type] = el['bytes'] * 8;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tObject.keys(data).map((key) => {\n\t\t\t\t\tbWidth.push(data[key]);\n\t\t\t\t});\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tbandwidth: bWidth,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tclearInterval(this.heartbeat);\n\t\t\t});\n\t}\n\n\tpollServerDelay() {\n\t\tApi.serverInfo()\n\t\t\t.then((res) => {\n\t\t\t\tlet data = res.StatisticsResources;\n\t\t\t\tlet dataFormatted = [];\n\t\t\t\tdata.map((item) => {\n\t\t\t\t\tlet time = this.timeDifference(item.at);\n\t\t\t\t\titem.at = time;\n\t\t\t\t\tif (time) {\n\t\t\t\t\t\tdataFormatted.push(item);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tserverInfo: dataFormatted,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\t// clearInterval(this.heartbeatDelay);\n\t\t\t});\n\n\t\tApi.currentSessions()\n\t\t\t.then((res) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tsessions: res.Metadata,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\t// clearInterval(this.heartbeatDelay);\n\t\t\t});\n\t}\n\n\ttoggleSessions() {\n\t\tthis.setState({\n\t\t\tsessionsCollapsed: this.state.sessionsCollapsed ? false : true,\n\t\t});\n\t}\n\n\tgetRequests() {\n\t\tlet requests = this.props.user.requests;\n\t\tif (!requests) {\n\t\t\tUser.getRequests();\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\trequests: true,\n\t\t\t\tpending: true,\n\t\t\t});\n\n\t\t\tObject.keys(requests).map((key) => {\n\t\t\t\tlet request = requests[key];\n\t\t\t\tif (request.type === 'movie') {\n\t\t\t\t\tApi.movie(key);\n\t\t\t\t} else {\n\t\t\t\t\tApi.series(key);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.setState({\n\t\t\t\tpending: false,\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tlet requests = this.props.user.requests;\n\t\treturn (\n\t\t\t<div className=\"widget--board\">\n\t\t\t\t<div className=\"widget--item widget--item__30\">\n\t\t\t\t\t<div className=\"widget--title\">Bandwidth</div>\n\t\t\t\t\t<hr />\n\t\t\t\t\t{this.state.bandwidth ? (\n\t\t\t\t\t\t<Bandwidth bandwidth={this.state.bandwidth} />\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"widget--item widget--item__30\">\n\t\t\t\t\t<div className=\"widget--title\">CPU</div>\n\t\t\t\t\t<hr />\n\t\t\t\t\t{this.state.serverInfo ? (\n\t\t\t\t\t\t<Cpu cpu={this.state.serverInfo} />\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"widget--item widget--item__30\">\n\t\t\t\t\t<div className=\"widget--title\">RAM</div>\n\t\t\t\t\t<hr />\n\t\t\t\t\t{this.state.serverInfo ? (\n\t\t\t\t\t\t<Ram ram={this.state.serverInfo} />\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"widget--item\">\n\t\t\t\t\t<div className=\"widget--title\">Requests</div>\n\t\t\t\t\t<hr />\n\t\t\t\t\t{!requests ? (\n\t\t\t\t\t\t<CarouselLoading />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Carousel>\n\t\t\t\t\t\t\t{Object.keys(requests).map((key) => {\n\t\t\t\t\t\t\t\tlet request = this.props.api.movie_lookup[key];\n\t\t\t\t\t\t\t\tlet users = requests[key].users;\n\t\t\t\t\t\t\t\tif (requests[key].type === 'tv') {\n\t\t\t\t\t\t\t\t\trequest = this.props.api.series_lookup[key];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (!request) return null;\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<RequestCard\n\t\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\t\tusers={users}\n\t\t\t\t\t\t\t\t\t\trequest={request}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Carousel>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<div\n\t\t\t\t\tclassName={\n\t\t\t\t\t\t'widget--item widget--item__50 ' +\n\t\t\t\t\t\t(this.state.sessionsCollapsed ? 'collapsed' : '')\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"session--toggle\"\n\t\t\t\t\t\tonClick={this.toggleSessions}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.state.sessionsCollapsed ? 'Details' : 'Overview'}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"widget--title\">Now Playing</div>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<Sessions sessions={this.state.sessions} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"widget--item widget--item__50\">\n\t\t\t\t\t<div className=\"widget--title\">Issues</div>\n\t\t\t\t\t<hr />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Dashboard;\n","/Users/ashleydyson/Documents/Petio/petio/admin/src/data/Plex/reducer.js",["192"],"import * as types from \"../actionTypes\";\n\nexport default function (\n  state = {\n    token: false,\n  },\n  action\n) {\n  switch (action.type) {\n    case types.PLEX_TOKEN:\n      return {\n        ...state,\n        token: action.token,\n      };\n    case types.PLEX_DETAILS:\n      return {\n        ...state,\n        servers: action.servers,\n        user: action.user,\n      };\n\n    case types.PLEX_SERVER:\n      return {\n        ...state,\n        servers: {\n          ...state.servers,\n          [action.key]: action.server,\n        },\n      };\n\n    default:\n      return state;\n  }\n}\n","/Users/ashleydyson/Documents/Petio/petio/admin/src/components/RequestCard.js",["193"],"import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass RequestCard extends React.Component {\n\trender() {\n\t\tlet request = this.props.request;\n\t\tif (!request) {\n\t\t\treturn null;\n\t\t}\n\t\tlet img = request.poster_path ? (\n\t\t\t<img\n\t\t\t\tsrc={`https://image.tmdb.org/t/p/w200/${request.poster_path}`}\n\t\t\t\talt={request.title}\n\t\t\t/>\n\t\t) : (\n\t\t\t<div className=\"no-poster\"></div>\n\t\t);\n\t\tlet type = this.props.user.requests[request.id].type;\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tkey={request.id}\n\t\t\t\tdata-key={request.id}\n\t\t\t\tclassName={'card type--movie-tv'}\n\t\t\t>\n\t\t\t\t<div className=\"card--inner\">\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto={`/${type === 'tv' ? 'series' : 'movie'}/${\n\t\t\t\t\t\t\trequest.id\n\t\t\t\t\t\t}`}\n\t\t\t\t\t\tclassName=\"full-link\"\n\t\t\t\t\t></Link>\n\n\t\t\t\t\t<div className=\"request-count\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tObject.keys(\n\t\t\t\t\t\t\t\tthis.props.user.requests[request.id].users\n\t\t\t\t\t\t\t).length\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"image-wrap\">\n\t\t\t\t\t\t{img}\n\t\t\t\t\t\t<div className=\"request-users\">\n\t\t\t\t\t\t\t{this.props.users.map((user_id) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div className=\"request-user\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"user-thumb\">\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={`/api/user/thumb/${user_id}`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"text-wrap\">\n\t\t\t\t\t\t<p\n\t\t\t\t\t\t\tclassName=\"title\"\n\t\t\t\t\t\t\ttitle={request.title || request.name}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{request.title || request.name}\n\t\t\t\t\t\t\t<span className=\"year\">\n\t\t\t\t\t\t\t\t{type === 'movie'\n\t\t\t\t\t\t\t\t\t? `(${new Date(\n\t\t\t\t\t\t\t\t\t\t\trequest.release_date\n\t\t\t\t\t\t\t\t\t  ).getFullYear()})`\n\t\t\t\t\t\t\t\t\t: `(${new Date(\n\t\t\t\t\t\t\t\t\t\t\trequest.first_air_date\n\t\t\t\t\t\t\t\t\t  ).getFullYear()} - ${new Date(\n\t\t\t\t\t\t\t\t\t\t\trequest.last_air_date\n\t\t\t\t\t\t\t\t\t  ).getFullYear()})`}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRequestCard = withRouter(RequestCard);\n\nfunction RequestCardContainer(props) {\n\treturn (\n\t\t<RequestCard\n\t\t\ttmdb={props.tmdb}\n\t\t\tuser={props.user}\n\t\t\tusers={props.users}\n\t\t\trequest={props.request}\n\t\t/>\n\t);\n}\n\nconst mapStateToProps = function (state) {\n\treturn {\n\t\ttmdb: state.tmdb,\n\t\tuser: state.user,\n\t};\n};\n\nexport default connect(mapStateToProps)(RequestCardContainer);\n","/Users/ashleydyson/Documents/Petio/petio/admin/src/components/Ram.js",["194"],"import React from 'react';\nimport {\n\tLineChart,\n\tLine,\n\tXAxis,\n\tYAxis,\n\tCartesianGrid,\n\tTooltip,\n\tLegend,\n\tResponsiveContainer,\n} from 'recharts';\n\nclass Ram extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\tlet height = window.innerWidth >= 992 ? 300 : 200;\n\t\tlet margin =\n\t\t\twindow.innerWidth >= 992\n\t\t\t\t? { top: 10, right: 0, left: -40, bottom: 0 }\n\t\t\t\t: { top: 10, right: 0, left: -60, bottom: 0 };\n\t\tconst formatter = (value) => value;\n\t\treturn (\n\t\t\t<ResponsiveContainer width=\"100%\" height={height}>\n\t\t\t\t<LineChart data={this.props.ram} margin={margin}>\n\t\t\t\t\t<XAxis dataKey=\"at\" />\n\t\t\t\t\t<YAxis\n\t\t\t\t\t\ttickFormatter={formatter}\n\t\t\t\t\t\tallowDecimals={false}\n\t\t\t\t\t\tticks={[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]}\n\t\t\t\t\t\tinterval={0}\n\t\t\t\t\t\ttick={window.innerWidth >= 992 ? true : false}\n\t\t\t\t\t/>\n\t\t\t\t\t<CartesianGrid />\n\t\t\t\t\t<Tooltip />\n\t\t\t\t\t<Legend iconType=\"circle\" align=\"right\" />\n\t\t\t\t\t<Line\n\t\t\t\t\t\ttype=\"monotone\"\n\t\t\t\t\t\tdataKey=\"processMemoryUtilization\"\n\t\t\t\t\t\tstroke=\"#33f1c5\"\n\t\t\t\t\t\tdot={false}\n\t\t\t\t\t\tstrokeWidth={2}\n\t\t\t\t\t\tactiveDot={{ r: 8 }}\n\t\t\t\t\t\tisAnimationActive={false}\n\t\t\t\t\t\tname=\"Plex\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Line\n\t\t\t\t\t\ttype=\"monotone\"\n\t\t\t\t\t\tdataKey=\"hostMemoryUtilization\"\n\t\t\t\t\t\tstroke=\"#bd86d1\"\n\t\t\t\t\t\tdot={false}\n\t\t\t\t\t\tstrokeWidth={2}\n\t\t\t\t\t\tisAnimationActive={false}\n\t\t\t\t\t\tname=\"System\"\n\t\t\t\t\t/>\n\t\t\t\t</LineChart>\n\t\t\t</ResponsiveContainer>\n\t\t);\n\t}\n}\n\nexport default Ram;\n","/Users/ashleydyson/Documents/Petio/petio/admin/src/index.js",[],"/Users/ashleydyson/Documents/Petio/petio/admin/src/App.js",["195","196","197"],"import React from \"react\";\nimport { HashRouter, Switch, Route, Link, withRouter, useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Sidebar from \"./components/Sidebar\";\nimport Login from \"./components/Login\";\nimport Dashboard from \"./page/Dashboard\";\nimport { ReactComponent as Spinner } from \"./assets/svg/spinner.svg\";\nimport Api from \"./data/Api\";\nimport Setup from \"./page/Setup\";\nimport Settings from \"./page/Settings\";\nimport Requests from \"./page/Requests\";\nimport Users from \"./page/Users\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoggedIn: false,\n      loading: true,\n      config: false,\n      configChecked: true,\n    };\n\n    this.changeLogin = this.changeLogin.bind(this);\n    this.checkConfig = this.checkConfig.bind(this);\n  }\n\n  checkConfig() {\n    this.setState({\n      configChecked: true,\n    });\n    Api.checkConfig()\n      .then((res) => {\n        console.log(res);\n        this.setState({\n          config: res.config,\n          loading: false,\n        });\n      })\n      .catch(() => {\n        this.setState({\n          error: true,\n          loading: false,\n        });\n      });\n  }\n\n  changeLogin(value) {\n    this.setState({\n      isLoggedIn: value,\n    });\n  }\n\n  componentDidUpdate() {\n    if (!this.state.config && !this.state.configChecked) {\n      this.checkConfig();\n    }\n    if (this.state.isLoggedIn && Object.keys(this.props.api.users).length === 0) {\n      Api.allUsers();\n    }\n  }\n\n  componentDidMount() {\n    this.checkConfig();\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <div className=\"app\">\n          <div className=\"setup--wrap\">\n            <p className=\"main-title\">Error</p>\n            <p>Something's wrong I can feel it...</p>\n            <p>Ok, you've managed to get the admin front end to load. But it looks like I can't talk to the API service.</p>\n            <p>\n              Please make sure the API service has started and is still running without any errors. Just finished the setup wizard? If the API can't connect to the DB it will reject the configuration\n              and needs a restart, so check the logs.\n            </p>\n            <p>Still stuck? Please report your issue to the dev team on discord and we will do our best to help you!</p>\n          </div>\n        </div>\n      );\n    }\n    if (this.state.loading) {\n      return (\n        <div className=\"spinner\">\n          <Spinner />\n        </div>\n      );\n    }\n    if (this.state.config === false) {\n      return (\n        <div className=\"app\">\n          <Setup checkConfig={this.checkConfig} />\n        </div>\n      );\n    }\n    if (!this.state.isLoggedIn) {\n      return (\n        <div className=\"app\">\n          <Login logged_in={this.state.isLoggedIn} changeLogin={this.changeLogin} />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"app\">\n          <HashRouter>\n            <Sidebar changeLogin={this.changeLogin} />\n            <div className=\"view\">\n              <Switch>\n                <Route exact path=\"/\">\n                  <Dashboard user={this.props.user} api={this.props.api} />\n                </Route>\n                <Route path=\"/settings\">\n                  <Settings />\n                </Route>\n                <Route path=\"/requests\">\n                  <Requests user={this.props.user} api={this.props.api} />\n                </Route>\n                <Route path=\"/users\">\n                  <Users api={this.props.api} />\n                </Route>\n              </Switch>\n            </div>\n          </HashRouter>\n        </div>\n      );\n    }\n  }\n}\n\nfunction AppContainer(props) {\n  return <App plex={props.plex} api={props.api} user={props.user} />;\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    plex: state.plex,\n    api: state.api,\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps)(AppContainer);\n","/Users/ashleydyson/Documents/Petio/petio/admin/src/serviceWorker.js",[],"/Users/ashleydyson/Documents/Petio/petio/admin/src/data/store.js",[],"/Users/ashleydyson/Documents/Petio/petio/admin/src/components/Sidebar.js",[],"/Users/ashleydyson/Documents/Petio/petio/admin/src/components/Login.js",[],"/Users/ashleydyson/Documents/Petio/petio/admin/src/page/Settings.js",["198","199"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, Link, Switch, Route } from 'react-router-dom';\n\nimport { ReactComponent as GeneralIcon } from '../assets/svg/settings-general.svg';\nimport General from './settings/general';\nimport Radarr from './settings/radarr';\nimport Sonarr from './settings/sonarr';\n\nclass Settings extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tparent: 'general',\n\t\t\tchild: '',\n\t\t};\n\t}\n\n\trender() {\n\t\tlet current = this.props.location.pathname;\n\t\treturn (\n\t\t\t<div className=\"settings--wrap\">\n\t\t\t\t<div className=\"settings--menu\">\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto=\"/settings\"\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t'settings--menu--item ' +\n\t\t\t\t\t\t\t(current === '/settings' ? 'active' : '')\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<p>General</p>\n\t\t\t\t\t\t<div className=\"icon\">\n\t\t\t\t\t\t\t<GeneralIcon />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto=\"/settings/sonarr\"\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t'settings--menu--item ' +\n\t\t\t\t\t\t\t(current === '/settings/sonarr' ? 'active' : '')\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<p>Sonarr</p>\n\t\t\t\t\t\t<div className=\"icon\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName=\"\"\n\t\t\t\t\t\t\t\tsrc=\"https://raw.githubusercontent.com/Sonarr/Sonarr/phantom-develop/Logo/256.png\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto=\"/settings/radarr\"\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t'settings--menu--item ' +\n\t\t\t\t\t\t\t(current === '/settings/radarr' ? 'active' : '')\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<p>Radarr</p>\n\t\t\t\t\t\t<div className=\"icon\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName=\"png-safe\"\n\t\t\t\t\t\t\t\tsrc=\"https://avatars1.githubusercontent.com/u/25025331\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"settings--content\">\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/settings\">\n\t\t\t\t\t\t\t<General />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/settings/sonarr\">\n\t\t\t\t\t\t\t<Sonarr />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/settings/radarr\">\n\t\t\t\t\t\t\t<Radarr />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nSettings = withRouter(Settings);\n\nfunction SettingsContainer(props) {\n\treturn (\n\t\t<Settings\n\t\t\tplex={props.plex}\n\t\t\tapi={props.api}\n\t\t\tuser={props.user}\n\t\t\tcheckConfig={props.checkConfig}\n\t\t/>\n\t);\n}\n\nconst mapStateToProps = function (state) {\n\treturn {\n\t\tplex: state.plex,\n\t\tapi: state.api,\n\t\tuser: state.user,\n\t};\n};\n\nexport default connect(mapStateToProps)(SettingsContainer);\n","/Users/ashleydyson/Documents/Petio/petio/admin/src/data/reducers.js",[],"/Users/ashleydyson/Documents/Petio/petio/admin/src/data/Api/index.js",["200"],"/Users/ashleydyson/Documents/Petio/petio/admin/src/components/CarouselLoading.js",[],"/Users/ashleydyson/Documents/Petio/petio/admin/src/components/Carousel.js",["201"],"import React from 'react';\n\nconst widths = {\n\tsmall: 0,\n\tmedium: 0,\n\tlarge: 160,\n};\n\nclass Carousel extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className={`carousel`}>\n\t\t\t\t<div className=\"carousel--inner\">{this.props.children}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Carousel;\n","/Users/ashleydyson/Documents/Petio/petio/admin/src/components/Bandwidth.js",["202"],"import React from 'react';\nimport {\n\tLineChart,\n\tLine,\n\tXAxis,\n\tYAxis,\n\tCartesianGrid,\n\tTooltip,\n\tLegend,\n\tResponsiveContainer,\n} from 'recharts';\n\nclass Bandwidth extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tformatBytes(bytes, decimals = 2) {\n\t\tif (bytes === 0) return '';\n\n\t\tconst k = 1000;\n\t\tconst dm = decimals < 0 ? 0 : decimals;\n\t\tconst sizes = [\n\t\t\t'bps',\n\t\t\t'kbps',\n\t\t\t'mbps',\n\t\t\t'gbps',\n\t\t\t'tbps',\n\t\t\t'pbps',\n\t\t\t'-',\n\t\t\t'-',\n\t\t\t'-',\n\t\t];\n\n\t\tconst i = Math.floor(Math.log(bytes) / Math.log(k));\n\n\t\treturn parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + sizes[i];\n\t}\n\n\trender() {\n\t\tlet height = window.innerWidth >= 992 ? 300 : 200;\n\t\tlet margin =\n\t\t\twindow.innerWidth >= 992\n\t\t\t\t? { top: 10, right: 0, left: -15, bottom: 0 }\n\t\t\t\t: { top: 10, right: 0, left: -60, bottom: 0 };\n\t\tconst formatter = (value) => `${this.formatBytes(value)}`;\n\t\t// const formatter = (value) => value;\n\t\treturn (\n\t\t\t<ResponsiveContainer width=\"100%\" height={height}>\n\t\t\t\t<LineChart data={this.props.bandwidth} margin={margin}>\n\t\t\t\t\t<XAxis\n\t\t\t\t\t\tdataKey=\"name\"\n\t\t\t\t\t\tticks={['2m0s', '1m30s', '1m0s', '30s', '0s']}\n\t\t\t\t\t/>\n\t\t\t\t\t<YAxis tickFormatter={formatter} allowDecimals={false} />\n\t\t\t\t\t<CartesianGrid />\n\t\t\t\t\t<Legend iconType=\"circle\" align=\"right\" />\n\t\t\t\t\t<Tooltip />\n\t\t\t\t\t<Line\n\t\t\t\t\t\ttype=\"monotone\"\n\t\t\t\t\t\tdataKey=\"Local\"\n\t\t\t\t\t\tstroke=\"#e69f23\"\n\t\t\t\t\t\tdot={false}\n\t\t\t\t\t\tstrokeWidth={2}\n\t\t\t\t\t\tactiveDot={{ r: 8 }}\n\t\t\t\t\t\tisAnimationActive={false}\n\t\t\t\t\t/>\n\t\t\t\t\t<Line\n\t\t\t\t\t\ttype=\"monotone\"\n\t\t\t\t\t\tdataKey=\"Remote\"\n\t\t\t\t\t\tstroke=\"#366dfc\"\n\t\t\t\t\t\tisAnimationActive={false}\n\t\t\t\t\t\tdot={false}\n\t\t\t\t\t\tstrokeWidth={2}\n\t\t\t\t\t/>\n\t\t\t\t</LineChart>\n\t\t\t</ResponsiveContainer>\n\t\t);\n\t}\n}\n\nexport default Bandwidth;\n","/Users/ashleydyson/Documents/Petio/petio/admin/src/components/Sessions.js",[],"/Users/ashleydyson/Documents/Petio/petio/admin/src/data/User/reducer.js",["203"],"import * as types from '../actionTypes';\n\nexport default function (\n\tstate = {\n\t\tcurrent: false,\n\t\tlogged_in: false,\n\t\tlibrary_index: false,\n\t\temail: false,\n\t\trequests: false,\n\t},\n\taction\n) {\n\tswitch (action.type) {\n\t\tcase types.LOGIN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrent: action.data.user,\n\t\t\t\tlogged_in: true,\n\t\t\t};\n\n\t\tcase types.LOGOUT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrent: false,\n\t\t\t\tlogged_in: false,\n\t\t\t\tcredentials: false,\n\t\t\t};\n\n\t\tcase types.GET_REQUESTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trequests: action.requests,\n\t\t\t};\n\n\t\tcase types.GET_REVIEWS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\treviews: {\n\t\t\t\t\t...state.reviews,\n\t\t\t\t\t[action.id]: action.reviews,\n\t\t\t\t},\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","/Users/ashleydyson/Documents/Petio/petio/admin/src/data/Api/reducer.js",["204"],"import * as types from \"../actionTypes\";\n\nexport default function (\n  state = {\n    user_roles: {\n      permissions: [],\n      rules: [],\n      seen_clients: [],\n      blocked_clients: [],\n      id: false,\n      username: false,\n      owner: false,\n      __v: 0,\n    },\n    logged_in: false,\n    servers: false,\n    config: \"pending\",\n    activeServer: false,\n    popular: {},\n    movie_lookup: {},\n    series_lookup: {},\n    season_lookup: {},\n    person_lookup: {},\n    search_results: {\n      movies: [],\n      series: [],\n      people: [],\n    },\n    actor_movie: {},\n    actor_series: {},\n    users: {},\n  },\n  action\n) {\n  switch (action.type) {\n    case types.POPULAR:\n      return {\n        ...state,\n        popular: action.popular,\n        updated: true,\n      };\n\n    case types.SEARCH:\n      return {\n        ...state,\n        search_results: {\n          movies: action.movies,\n          series: action.series,\n          people: action.people,\n        },\n      };\n\n    case types.MOVIE_LOOKUP:\n      let creditCache = {};\n      if (action.movie) {\n        if (action.movie.credits) {\n          Object.keys(action.movie.credits).forEach((key) => {\n            Object.keys(action.movie.credits[key]).forEach((skey) => {\n              creditCache[action.movie.credits[key][skey].id] = action.movie.credits[key][skey];\n            });\n          });\n        }\n      }\n\n      return {\n        ...state,\n        movie_lookup: {\n          ...state.movie_lookup,\n          [action.id]: action.movie,\n        },\n        actor_cache: {\n          creditCache,\n        },\n        updated: true,\n      };\n\n    case types.PERSON_LOOKUP:\n      return {\n        ...state,\n        person_lookup: {\n          ...state.movie_lookup,\n          [action.id]: action.person,\n        },\n        updated: true,\n      };\n\n    case types.SERIES_LOOKUP:\n      let creditCacheS = {};\n      if (action.series)\n        if (action.series.credits) {\n          Object.keys(action.series.credits).forEach((key) => {\n            Object.keys(action.series.credits[key]).forEach((skey) => {\n              creditCacheS[action.series.credits[key][skey].id] = action.series.credits[key][skey];\n            });\n          });\n        }\n\n      return {\n        ...state,\n        series_lookup: {\n          ...state.series_lookup,\n          [action.id]: action.series,\n        },\n        actor_cache: {\n          creditCacheS,\n        },\n        updated: true,\n      };\n\n    case types.SEASON_LOOKUP:\n      return {\n        ...state,\n        season_lookup: {\n          ...state.season_lookup,\n          [`${action.series}_s${action.season}`]: action.data,\n        },\n      };\n\n    case types.STORE_ACTOR_MOVIE:\n      return {\n        ...state,\n        actor_movie: {\n          ...state.actor_movie,\n          [action.id]: {\n            cast: action.cast,\n            crew: action.crew,\n          },\n        },\n        updated: true,\n      };\n\n    case types.STORE_ACTOR_SERIES:\n      return {\n        ...state,\n        actor_series: {\n          ...state.actor_series,\n          [action.id]: {\n            cast: action.cast,\n            crew: action.crew,\n          },\n        },\n        updated: true,\n      };\n\n    case types.GET_USER:\n      return {\n        ...state,\n        users: {\n          ...state.users,\n          [action.id]: action.user,\n        },\n        updated: true,\n      };\n\n    case types.ALL_USERS:\n      return {\n        ...state,\n        users: action.users,\n        updated: true,\n      };\n\n    default:\n      return state;\n  }\n}\n","/Users/ashleydyson/Documents/Petio/petio/admin/src/page/settings/radarr.js",["205","206","207","208","209"],"import React from \"react\";\nimport Api from \"../../data/Api\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { ReactComponent as Add } from \"../../assets/svg/plus-circle.svg\";\nimport { ReactComponent as ServerIcon } from \"../../assets/svg/server.svg\";\n\nimport { ReactComponent as Spinner } from \"../../assets/svg/spinner.svg\";\nimport Modal from \"./modal\";\n\nclass Radarr extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      servers: false,\n      loading: true,\n      isError: false,\n      isMsg: false,\n      wizardOpen: false,\n      active: false,\n      title: \"\",\n      protocol: \"http\",\n      host: \"localhost\",\n      port: \"\",\n      profile: \"\",\n      profile_title: \"\",\n      path: \"\",\n      path_title: \"\",\n      active: false,\n      base: \"\",\n      apikey: \"\",\n      path: false,\n      profile: false,\n      activeServer: false,\n      uuid: false,\n    };\n\n    this.inputChange = this.inputChange.bind(this);\n    this.getRadarr = this.getRadarr.bind(this);\n    this.saveServer = this.saveServer.bind(this);\n    this.deleteServer = this.deleteServer.bind(this);\n    this.openWizard = this.openWizard.bind(this);\n    this.closeWizard = this.closeWizard.bind(this);\n    // this.test = this.test.bind(this);\n\n    this.closeMsg = false;\n  }\n\n  async saveServer() {\n    if (this.state.activeServer === false) {\n      console.log(\"error\");\n      return;\n    }\n    let servers = this.state.servers;\n\n    servers[this.state.activeServer] = {\n      active: this.state.active,\n      title: this.state.title,\n      protocol: this.state.protocol,\n      hostname: this.state.host,\n      apiKey: this.state.apikey,\n      port: this.state.port,\n      urlBase: this.state.base,\n      path: this.state.path,\n      path_title: this.state.path_title,\n      profile: this.state.profile,\n      profile_title: this.state.profile_title,\n      uuid: this.state.uuid,\n    };\n\n    console.log(servers);\n    // return;\n    await Api.saveRadarrConfig(servers);\n    this.getRadarr();\n    this.closeWizard();\n\n    this.setState({\n      isError: false,\n      isMsg: \"Radarr settings saved!\",\n    });\n\n    clearInterval(this.closeMsg);\n    this.closeMsg = setInterval(() => {\n      this.setState({\n        isError: false,\n        isMsg: false,\n      });\n    }, 3000);\n  }\n\n  async deleteServer() {\n    if (this.state.activeServer === false) {\n      console.log(\"error\");\n      return;\n    }\n\n    let servers = this.state.servers;\n\n    servers.splice(this.state.activeServer, 1);\n\n    console.log(servers);\n    // return;\n    await Api.saveRadarrConfig(servers);\n    this.getRadarr();\n    this.closeWizard();\n\n    this.setState({\n      isError: false,\n      isMsg: \"Radarr Server Removed\",\n    });\n\n    clearInterval(this.closeMsg);\n    this.closeMsg = setInterval(() => {\n      this.setState({\n        isError: false,\n        isMsg: false,\n      });\n    }, 3000);\n  }\n\n  async test(id) {\n    try {\n      let result = await Api.testRadarr(id);\n      if (result.connection) {\n        this.setState({\n          isError: false,\n          isMsg: \"Radarr Test Connection success!\",\n        });\n      } else {\n        this.setState({\n          isError: \"Radarr Test Connection failed!\",\n          isMsg: false,\n        });\n      }\n    } catch (err) {\n      this.setState({\n        isError: \"Radarr Test Connection failed! Error 2\",\n        isMsg: false,\n      });\n    }\n    clearInterval(this.closeMsg);\n    this.closeMsg = setInterval(() => {\n      this.setState({\n        isError: false,\n        isMsg: false,\n      });\n    }, 3000);\n  }\n\n  inputChange(e) {\n    const target = e.target;\n    const name = target.name;\n    let value = target.value;\n\n    if (target.type === \"checkbox\") {\n      value = target.checked;\n    }\n\n    console.log(target.type);\n\n    if (target.type === \"select-one\") {\n      let title = target.options[target.selectedIndex].text;\n      console.log(`${name}_title`);\n      this.setState({\n        [name]: value,\n        [`${name}_title`]: title,\n      });\n    } else {\n      this.setState({\n        [name]: value,\n      });\n    }\n  }\n\n  async getRadarr() {\n    this.setState({\n      loading: true,\n    });\n    try {\n      let radarr = await Api.radarrConfig();\n      this.setState({\n        servers: radarr,\n        loading: false,\n      });\n    } catch (err) {\n      console.log(err);\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.getRadarr();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.closeMsg);\n  }\n\n  openWizard(id) {\n    if (this.state.servers[id]) {\n      this.setState({\n        editWizardOpen: true,\n        activeServer: id,\n        active: this.state.servers[id].active ? this.state.servers[id].active : false,\n        title: this.state.servers[id].title,\n        protocol: this.state.servers[id].protocol,\n        host: this.state.servers[id].hostname,\n        port: this.state.servers[id].port,\n        base: this.state.servers[id].urlBase,\n        apikey: this.state.servers[id].apiKey,\n        active: this.state.servers[id].active,\n        profile: this.state.servers[id].profile,\n        profile_title: this.state.servers[id].profile_title,\n        path: this.state.servers[id].path,\n        path_title: this.state.servers[id].path_title,\n        uuid: this.state.servers[id].uuid,\n      });\n    } else {\n      this.setState({\n        wizardOpen: true,\n        activeServer: id,\n        uuid: uuidv4(),\n      });\n    }\n  }\n\n  closeWizard() {\n    this.setState({\n      active: false,\n      title: \"\",\n      protocol: \"http\",\n      host: \"localhost\",\n      port: null,\n      base: \"\",\n      apikey: \"\",\n      active: false,\n      profiles: false,\n      paths: false,\n      path: false,\n      profile: false,\n      wizardOpen: false,\n      editWizardOpen: false,\n      activeServer: false,\n      uuid: false,\n    });\n  }\n\n  render() {\n    let serverCount = 0;\n    if (this.state.loading) {\n      return (\n        <>\n          {this.state.isError ? (\n            <div className=\"setting-msg error\">\n              <p>{this.state.isError}</p>\n            </div>\n          ) : null}\n          {this.state.isMsg ? (\n            <div className=\"setting-msg good\">\n              <p>{this.state.isMsg}</p>\n            </div>\n          ) : null}\n          <div className=\"spinner--settings\">\n            <Spinner />\n          </div>\n        </>\n      );\n    }\n    return (\n      <>\n        {this.state.isError ? (\n          <div className=\"setting-msg error\">\n            <p>{this.state.isError}</p>\n          </div>\n        ) : null}\n        {this.state.isMsg ? (\n          <div className=\"setting-msg good\">\n            <p>{this.state.isMsg}</p>\n          </div>\n        ) : null}\n        {this.state.wizardOpen ? <Modal title=\"Add New Server\" edit={false} state={this.state} inputChange={this.inputChange} saveServer={this.saveServer} closeWizard={this.closeWizard} /> : null}\n        {this.state.editWizardOpen ? (\n          <Modal\n            title={`Edit ${this.state.title}`}\n            edit={true}\n            state={this.state}\n            inputChange={this.inputChange}\n            saveServer={this.saveServer}\n            closeWizard={this.closeWizard}\n            deleteServer={this.deleteServer}\n            type=\"radarr\"\n          />\n        ) : null}\n        <section>\n          <p className=\"main-title mb--2\">Radarr</p>\n          <p className=\"capped-width\">\n            Radarr is a movie collection manager for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new movies and will interface with clients and indexers to grab, sort, and\n            rename them. It can also be configured to automatically upgrade the quality of existing files in the library when a better quality format becomes available.\n          </p>\n        </section>\n        <section>\n          <p className=\"main-title mb--2\">Servers</p>\n          <div className=\"sr--grid\">\n            {this.state.servers.map((server, i) => {\n              serverCount++;\n              return (\n                <div className=\"sr--instance\">\n                  <div className=\"sr--instance--inner\">\n                    <ServerIcon />\n                    <p className=\"sr--title\">{server.title}</p>\n                    <p>{`${server.protocol}://${server.hostname}:${server.port}`}</p>\n                    <p>Status: {server.active ? \"Enabled\" : \"Disabled\"}</p>\n                    <p>Profile: {server.profile_title ? server.profile_title : \"Not set\"}</p>\n                    <p>Path: {server.path_title ? server.path_title : \"Not set\"}</p>\n                    <p className=\"small\">ID: {server.uuid ? server.uuid : \"Error\"}</p>\n                    <div className=\"btn-wrap\">\n                      <button className=\"btn\" onClick={() => this.openWizard(i)}>\n                        Edit\n                      </button>\n                      <button className=\"btn\" onClick={() => this.test(server.uuid)}>\n                        Test\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n            <div className=\"sr--instance sr--add-new\">\n              <div className=\"sr--instance--inner\" onClick={() => this.openWizard(serverCount)}>\n                <p className=\"sr--title\">Add new</p>\n                <Add />\n              </div>\n            </div>\n          </div>\n        </section>\n      </>\n    );\n  }\n}\n\nexport default Radarr;\n","/Users/ashleydyson/Documents/Petio/petio/admin/src/page/settings/general.js",["210"],"import React from 'react';\nimport Api from '../../data/Api';\n\nimport { ReactComponent as Spinner } from '../../assets/svg/spinner.svg';\n\nclass General extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\temail_user: '',\n\t\t\temail_pass: '',\n\t\t\temail_server: '',\n\t\t\temail_port: '',\n\t\t\temail_secure: false,\n\t\t\temail_enabled: false,\n\t\t};\n\n\t\tthis.inputChange = this.inputChange.bind(this);\n\t\tthis.closeMsg = false;\n\t\tthis.saveEmail = this.saveEmail.bind(this);\n\t\tthis.loadConfigs = this.loadConfigs.bind(this);\n\t\tthis.testEmail = this.testEmail.bind(this);\n\t}\n\n\tinputChange(e) {\n\t\tconst target = e.target;\n\t\tconst name = target.name;\n\t\tlet value = target.value;\n\n\t\tif (target.type === 'checkbox') {\n\t\t\tvalue = target.checked;\n\t\t}\n\n\t\tthis.setState({\n\t\t\t[name]: value,\n\t\t});\n\t}\n\n\tasync saveEmail() {\n\t\tawait Api.saveEmailConfig({\n\t\t\tuser: this.state.email_user,\n\t\t\tpass: this.state.email_pass,\n\t\t\tserver: this.state.email_server,\n\t\t\tport: this.state.email_port,\n\t\t\tsecure: this.state.email_secure,\n\t\t\tenabled: this.state.email_enabled,\n\t\t});\n\n\t\tthis.setState({\n\t\t\tisError: false,\n\t\t\tisMsg: 'Email settings saved!',\n\t\t});\n\t\tclearInterval(this.closeMsg);\n\t\tthis.closeMsg = setInterval(() => {\n\t\t\tthis.setState({\n\t\t\t\tisError: false,\n\t\t\t\tisMsg: false,\n\t\t\t});\n\t\t}, 3000);\n\t}\n\n\tasync loadConfigs() {\n\t\ttry {\n\t\t\tlet email = await Api.getEmailConfig();\n\t\t\tthis.setState({\n\t\t\t\temail_enabled: email.config.emailEnabled,\n\t\t\t\temail_user: email.config.emailUser,\n\t\t\t\temail_pass: email.config.emailPass,\n\t\t\t\temail_server: email.config.emailServer,\n\t\t\t\temail_port: email.config.emailPort,\n\t\t\t\temail_secure: email.config.emailSecure,\n\t\t\t\tloading: false,\n\t\t\t\tisError: false,\n\t\t\t\tisMsg: 'Email config loaded',\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\tthis.setState({\n\t\t\t\tloading: false,\n\t\t\t\tisError: 'Error getting email config',\n\t\t\t});\n\t\t}\n\t\tclearInterval(this.closeMsg);\n\t\tthis.closeMsg = setInterval(() => {\n\t\t\tthis.setState({\n\t\t\t\tisError: false,\n\t\t\t\tisMsg: false,\n\t\t\t});\n\t\t}, 3000);\n\t}\n\n\tasync testEmail() {\n\t\ttry {\n\t\t\tawait this.saveEmail();\n\t\t\tlet test = await Api.testEmail();\n\t\t\tconsole.log(test);\n\t\t\tif (test.result) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisMsg: 'Email test passed',\n\t\t\t\t\tisError: false,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisMsg: false,\n\t\t\t\t\tisError: 'Email test Failed',\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\tthis.setState({\n\t\t\t\tisMsg: false,\n\t\t\t\tisError: 'Email test Failed',\n\t\t\t});\n\t\t}\n\t\tclearInterval(this.closeMsg);\n\t\tthis.closeMsg = setInterval(() => {\n\t\t\tthis.setState({\n\t\t\t\tisError: false,\n\t\t\t\tisMsg: false,\n\t\t\t});\n\t\t}, 3000);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadConfigs();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.closeMsg);\n\t}\n\n\trender() {\n\t\tif (this.state.loading) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t{this.state.isError ? (\n\t\t\t\t\t\t<div className=\"setting-msg error\">\n\t\t\t\t\t\t\t<p>{this.state.isError}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t\t{this.state.isMsg ? (\n\t\t\t\t\t\t<div className=\"setting-msg good\">\n\t\t\t\t\t\t\t<p>{this.state.isMsg}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<div className=\"spinner--settings\">\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{this.state.isError ? (\n\t\t\t\t\t<div className=\"setting-msg error\">\n\t\t\t\t\t\t<p>{this.state.isError}</p>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t\t{this.state.isMsg ? (\n\t\t\t\t\t<div className=\"setting-msg good\">\n\t\t\t\t\t\t<p>{this.state.isMsg}</p>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t\t<section>\n\t\t\t\t\t<p className=\"main-title\">General</p>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<p className=\"main-title mb--2\">Plex</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tIf connection has been lost to Plex re-authenticate\n\t\t\t\t\t\there.\n\t\t\t\t\t</p>\n\t\t\t\t\t<button className=\"btn\">Login with plex</button>\n\t\t\t\t\t<button className=\"btn\" style={{ marginLeft: '10px' }}>\n\t\t\t\t\t\tTest\n\t\t\t\t\t</button>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<p className=\"main-title mb--2\">Email</p>\n\t\t\t\t\t<label>Username</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"email_user\"\n\t\t\t\t\t\tvalue={this.state.email_user}\n\t\t\t\t\t\tonChange={this.inputChange}\n\t\t\t\t\t\tautoComplete=\"new-password\"\n\t\t\t\t\t\tautoCorrect=\"off\"\n\t\t\t\t\t\tspellCheck=\"off\"\n\t\t\t\t\t/>\n\t\t\t\t\t<label>Password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tname=\"email_pass\"\n\t\t\t\t\t\tvalue={this.state.email_pass}\n\t\t\t\t\t\tonChange={this.inputChange}\n\t\t\t\t\t\tautoComplete=\"new-password\"\n\t\t\t\t\t\tautoCorrect=\"off\"\n\t\t\t\t\t\tspellCheck=\"off\"\n\t\t\t\t\t/>\n\t\t\t\t\t<label>SMTP Server</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"email_server\"\n\t\t\t\t\t\tvalue={this.state.email_server}\n\t\t\t\t\t\tonChange={this.inputChange}\n\t\t\t\t\t\tautoComplete=\"new-password\"\n\t\t\t\t\t\tautoCorrect=\"off\"\n\t\t\t\t\t\tspellCheck=\"off\"\n\t\t\t\t\t/>\n\t\t\t\t\t<label>Port</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname=\"email_port\"\n\t\t\t\t\t\tvalue={this.state.email_port}\n\t\t\t\t\t\tonChange={this.inputChange}\n\t\t\t\t\t\tautoComplete=\"new-password\"\n\t\t\t\t\t\tautoCorrect=\"off\"\n\t\t\t\t\t\tspellCheck=\"off\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"checkbox-wrap mb--2\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tname=\"email_secure\"\n\t\t\t\t\t\t\tchecked={this.state.email_secure}\n\t\t\t\t\t\t\tonChange={this.inputChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tUse Secure{' '}\n\t\t\t\t\t\t\t<small>(For port 587 or 25 use false)</small>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"checkbox-wrap mb--2\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tname=\"email_enabled\"\n\t\t\t\t\t\t\tchecked={this.state.email_enabled}\n\t\t\t\t\t\t\tonChange={this.inputChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<p>Enabled</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tUsing Gmail? Make sure to allow \"less secure apps\" to\n\t\t\t\t\t\tallow Petio to send emails on your behalf. You can\n\t\t\t\t\t\tchange this setting{' '}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\thref=\"https://www.google.com/settings/security/lesssecureapps\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\there\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn\"\n\t\t\t\t\t\tstyle={{ marginRight: '10px' }}\n\t\t\t\t\t\tonClick={this.saveEmail}\n\t\t\t\t\t>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<button className=\"btn\" onClick={this.testEmail}>\n\t\t\t\t\t\tTest\n\t\t\t\t\t</button>\n\t\t\t\t</section>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default General;\n","/Users/ashleydyson/Documents/Petio/petio/admin/src/page/settings/sonarr.js",["211","212","213","214","215"],"import React from \"react\";\nimport Api from \"../../data/Api\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { ReactComponent as Add } from \"../../assets/svg/plus-circle.svg\";\nimport { ReactComponent as ServerIcon } from \"../../assets/svg/server.svg\";\n\nimport { ReactComponent as Spinner } from \"../../assets/svg/spinner.svg\";\nimport Modal from \"./modal\";\n\nclass Sonarr extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      servers: false,\n      loading: true,\n      isError: false,\n      isMsg: false,\n      wizardOpen: false,\n      active: false,\n      title: \"\",\n      protocol: \"http\",\n      host: \"localhost\",\n      port: \"\",\n      profile: \"\",\n      profile_title: \"\",\n      path: \"\",\n      path_title: \"\",\n      active: false,\n      base: \"\",\n      apikey: \"\",\n      path: false,\n      profile: false,\n      activeServer: false,\n      uuid: false,\n    };\n\n    this.inputChange = this.inputChange.bind(this);\n    this.getSonarr = this.getSonarr.bind(this);\n    this.saveServer = this.saveServer.bind(this);\n    this.deleteServer = this.deleteServer.bind(this);\n    this.openWizard = this.openWizard.bind(this);\n    this.closeWizard = this.closeWizard.bind(this);\n    // this.test = this.test.bind(this);\n\n    this.closeMsg = false;\n  }\n\n  async saveServer() {\n    if (this.state.activeServer === false) {\n      console.log(\"error\");\n      return;\n    }\n    let servers = this.state.servers;\n\n    servers[this.state.activeServer] = {\n      active: this.state.active,\n      title: this.state.title,\n      protocol: this.state.protocol,\n      hostname: this.state.host,\n      apiKey: this.state.apikey,\n      port: this.state.port,\n      urlBase: this.state.base,\n      path: this.state.path,\n      path_title: this.state.path_title,\n      profile: this.state.profile,\n      profile_title: this.state.profile_title,\n      uuid: this.state.uuid,\n    };\n\n    console.log(servers);\n    // return;\n    await Api.saveSonarrConfig(servers);\n    this.getSonarr();\n    this.closeWizard();\n\n    this.setState({\n      isError: false,\n      isMsg: \"Sonarr settings saved!\",\n    });\n\n    clearInterval(this.closeMsg);\n    this.closeMsg = setInterval(() => {\n      this.setState({\n        isError: false,\n        isMsg: false,\n      });\n    }, 3000);\n  }\n\n  async deleteServer() {\n    if (this.state.activeServer === false) {\n      console.log(\"error\");\n      return;\n    }\n\n    let servers = this.state.servers;\n\n    servers.splice(this.state.activeServer, 1);\n\n    console.log(servers);\n    // return;\n    await Api.saveSonarrConfig(servers);\n    this.getSonarr();\n    this.closeWizard();\n\n    this.setState({\n      isError: false,\n      isMsg: \"Sonarr Server Removed\",\n    });\n\n    clearInterval(this.closeMsg);\n    this.closeMsg = setInterval(() => {\n      this.setState({\n        isError: false,\n        isMsg: false,\n      });\n    }, 3000);\n  }\n\n  async test(id) {\n    try {\n      let result = await Api.testSonarr(id);\n      if (result.connection) {\n        this.setState({\n          isError: false,\n          isMsg: \"Sonarr Test Connection success!\",\n        });\n      } else {\n        this.setState({\n          isError: \"Sonarr Test Connection failed!\",\n          isMsg: false,\n        });\n      }\n    } catch (err) {\n      this.setState({\n        isError: \"Sonarr Test Connection failed! Error 2\",\n        isMsg: false,\n      });\n    }\n    clearInterval(this.closeMsg);\n    this.closeMsg = setInterval(() => {\n      this.setState({\n        isError: false,\n        isMsg: false,\n      });\n    }, 3000);\n  }\n\n  inputChange(e) {\n    const target = e.target;\n    const name = target.name;\n    let value = target.value;\n\n    if (target.type === \"checkbox\") {\n      value = target.checked;\n    }\n\n    console.log(target.type);\n\n    if (target.type === \"select-one\") {\n      let title = target.options[target.selectedIndex].text;\n      console.log(`${name}_title`);\n      this.setState({\n        [name]: value,\n        [`${name}_title`]: title,\n      });\n    } else {\n      this.setState({\n        [name]: value,\n      });\n    }\n  }\n\n  async getSonarr() {\n    this.setState({\n      loading: true,\n    });\n    try {\n      let sonarr = await Api.sonarrConfig();\n      this.setState({\n        servers: sonarr,\n        loading: false,\n      });\n    } catch (err) {\n      console.log(err);\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.getSonarr();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.closeMsg);\n  }\n\n  openWizard(id) {\n    if (this.state.servers[id]) {\n      this.setState({\n        editWizardOpen: true,\n        activeServer: id,\n        active: this.state.servers[id].active ? this.state.servers[id].active : false,\n        title: this.state.servers[id].title,\n        protocol: this.state.servers[id].protocol,\n        host: this.state.servers[id].hostname,\n        port: this.state.servers[id].port,\n        base: this.state.servers[id].urlBase,\n        apikey: this.state.servers[id].apiKey,\n        active: this.state.servers[id].active,\n        profile: this.state.servers[id].profile,\n        profile_title: this.state.servers[id].profile_title,\n        path: this.state.servers[id].path,\n        path_title: this.state.servers[id].path_title,\n        uuid: this.state.servers[id].uuid,\n      });\n    } else {\n      this.setState({\n        wizardOpen: true,\n        activeServer: id,\n        uuid: uuidv4(),\n      });\n    }\n  }\n\n  closeWizard() {\n    this.setState({\n      active: false,\n      title: \"\",\n      protocol: \"http\",\n      host: \"localhost\",\n      port: null,\n      base: \"\",\n      apikey: \"\",\n      active: false,\n      profiles: false,\n      paths: false,\n      path: false,\n      profile: false,\n      wizardOpen: false,\n      editWizardOpen: false,\n      activeServer: false,\n      uuid: false,\n    });\n  }\n\n  render() {\n    let serverCount = 0;\n    if (this.state.loading) {\n      return (\n        <>\n          {this.state.isError ? (\n            <div className=\"setting-msg error\">\n              <p>{this.state.isError}</p>\n            </div>\n          ) : null}\n          {this.state.isMsg ? (\n            <div className=\"setting-msg good\">\n              <p>{this.state.isMsg}</p>\n            </div>\n          ) : null}\n          <div className=\"spinner--settings\">\n            <Spinner />\n          </div>\n        </>\n      );\n    }\n    return (\n      <>\n        {this.state.isError ? (\n          <div className=\"setting-msg error\">\n            <p>{this.state.isError}</p>\n          </div>\n        ) : null}\n        {this.state.isMsg ? (\n          <div className=\"setting-msg good\">\n            <p>{this.state.isMsg}</p>\n          </div>\n        ) : null}\n        {this.state.wizardOpen ? <Modal title=\"Add New Server\" edit={false} state={this.state} inputChange={this.inputChange} saveServer={this.saveServer} closeWizard={this.closeWizard} /> : null}\n        {this.state.editWizardOpen ? (\n          <Modal\n            title={`Edit ${this.state.title}`}\n            edit={true}\n            state={this.state}\n            inputChange={this.inputChange}\n            saveServer={this.saveServer}\n            closeWizard={this.closeWizard}\n            deleteServer={this.deleteServer}\n          />\n        ) : null}\n        <section>\n          <p className=\"main-title mb--2\">Sonarr</p>\n          <p className=\"capped-width\">\n            Sonarr is a PVR for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to\n            automatically upgrade the quality of files already downloaded when a better quality format becomes available.\n          </p>\n        </section>\n        <section>\n          <p className=\"main-title mb--2\">Servers</p>\n          <div className=\"sr--grid\">\n            {this.state.servers.map((server, i) => {\n              serverCount++;\n              return (\n                <div className=\"sr--instance\">\n                  <div className=\"sr--instance--inner\">\n                    <ServerIcon />\n                    <p className=\"sr--title\">{server.title}</p>\n                    <p>{`${server.protocol}://${server.hostname}:${server.port}`}</p>\n                    <p>Status: {server.active ? \"Enabled\" : \"Disabled\"}</p>\n                    <p>Profile: {server.profile_title ? server.profile_title : \"Not set\"}</p>\n                    <p>Path: {server.path_title ? server.path_title : \"Not set\"}</p>\n                    <p className=\"small\">ID: {server.uuid ? server.uuid : \"Error\"}</p>\n                    <div className=\"btn-wrap\">\n                      <button className=\"btn\" onClick={() => this.openWizard(i)}>\n                        Edit\n                      </button>\n                      <button className=\"btn\" onClick={() => this.test(server.uuid)}>\n                        Test\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n            <div className=\"sr--instance sr--add-new\">\n              <div className=\"sr--instance--inner\" onClick={() => this.openWizard(serverCount)}>\n                <p className=\"sr--title\">Add new</p>\n                <Add />\n              </div>\n            </div>\n          </div>\n        </section>\n      </>\n    );\n  }\n}\n\nexport default Sonarr;\n","/Users/ashleydyson/Documents/Petio/petio/admin/src/data/Api/actions.js",["216","217"],"/Users/ashleydyson/Documents/Petio/petio/admin/src/data/User/index.js",["218"],"import { login, logout, getRequests } from './actions';\n\nexport default {\n\tlogin,\n\tlogout,\n\tgetRequests,\n};\n","/Users/ashleydyson/Documents/Petio/petio/admin/src/data/Plex/index.js",["219"],"import { plexAuth } from './actions';\n\nexport default {\n\tplexAuth,\n};\n","/Users/ashleydyson/Documents/Petio/petio/admin/src/components/SessionMedia.js",["220","221","222","223","224"],"import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Api from '../data/Api';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\nimport MovieCard from './MovieCard';\nimport TvCard from './TvCard';\nimport { ReactComponent as PlayIcon } from '../assets/svg/play.svg';\nimport { ReactComponent as PauseIcon } from '../assets/svg/pause.svg';\nimport { ReactComponent as BufferIcon } from '../assets/svg/buffer.svg';\n\nclass SessionMedia extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tid: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tif (!this.props.live && this.props.type !== 'clip') {\n\t\t\tif (this.props.type === 'movie') {\n\t\t\t\tthis.getMovie();\n\t\t\t} else {\n\t\t\t\tthis.getSeries();\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (!this.props.live && !this.state.id && this.props.type !== 'clip') {\n\t\t\tif (this.props.type === 'movie') {\n\t\t\t\tthis.getMovie();\n\t\t\t} else {\n\t\t\t\tthis.getSeries();\n\t\t\t}\n\t\t}\n\t}\n\n\tgetMovie() {\n\t\tApi.get_plex_media(this.props.id, 'movie').then((res) => {\n\t\t\tthis.setState({\n\t\t\t\tid: res.tmdb_id,\n\t\t\t});\n\t\t});\n\t}\n\n\tgetSeries() {\n\t\tApi.get_plex_media(this.props.id, 'tv').then((res) => {\n\t\t\tthis.setState({\n\t\t\t\tid: res.tmdb_id,\n\t\t\t});\n\t\t});\n\t}\n\n\trender() {\n\t\tlet card = null;\n\t\tif (!this.state.id && !this.props.live && this.props.type !== 'clip') {\n\t\t\treturn null;\n\t\t}\n\t\tif (\n\t\t\tthis.props.live ||\n\t\t\tthis.props.type === 'clip' ||\n\t\t\tthis.props.type === 'trailer' ||\n\t\t\tthis.state.id === 'false'\n\t\t) {\n\t\t\tlet playbackState;\n\t\t\tswitch (this.props.playbackState) {\n\t\t\t\tcase 'playing':\n\t\t\t\tcase 'streaming':\n\t\t\t\t\tplaybackState = <PlayIcon />;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'paused':\n\t\t\t\t\tplaybackState = <PauseIcon />;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'buffering':\n\t\t\t\t\tplaybackState = <BufferIcon />;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tplaybackState = <p>{this.props.playbackState}</p>;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcard = (\n\t\t\t\t<div className=\"card type--generic\" key={this.props.uid}>\n\t\t\t\t\t<div className=\"card--inner\"></div>\n\t\t\t\t\t<div className=\"image-wrap\">\n\t\t\t\t\t\t{this.props.progress ? (\n\t\t\t\t\t\t\t<div className=\"session--duration\">\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"session--prog\"\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tmaxWidth: this.props.progress + '%',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t<div className=\"playback-status\">{playbackState}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if (this.props.type === 'movie') {\n\t\t\tcard = (\n\t\t\t\t<MovieCard\n\t\t\t\t\tkey={this.props.uid}\n\t\t\t\t\tmovie={{\n\t\t\t\t\t\tid: this.state.id,\n\t\t\t\t\t}}\n\t\t\t\t\tprogress={this.props.progress}\n\t\t\t\t\tplaybackState={this.props.playbackState}\n\t\t\t\t/>\n\t\t\t);\n\t\t} else {\n\t\t\tcard = (\n\t\t\t\t<TvCard\n\t\t\t\t\tkey={this.props.uid}\n\t\t\t\t\tseries={{\n\t\t\t\t\t\tid: this.state.id,\n\t\t\t\t\t}}\n\t\t\t\t\tprogress={this.props.progress}\n\t\t\t\t\tplaybackState={this.props.playbackState}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"session--media\">\n\t\t\t\t<div className=\"session--media--inner\">\n\t\t\t\t\t<div className=\"session--user\">\n\t\t\t\t\t\t<img src={this.props.userThumb} />\n\t\t\t\t\t</div>\n\t\t\t\t\t{card}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SessionMedia;\n","/Users/ashleydyson/Documents/Petio/petio/admin/src/data/actionTypes.js",[],"/Users/ashleydyson/Documents/Petio/petio/admin/src/data/User/actions.js",[],"/Users/ashleydyson/Documents/Petio/petio/admin/src/data/Plex/actions.js",["225"],"/Users/ashleydyson/Documents/Petio/petio/admin/src/components/MovieCard.js",[],"/Users/ashleydyson/Documents/Petio/petio/admin/src/components/TvCard.js",[],"/Users/ashleydyson/Documents/Petio/petio/admin/src/page/Requests.js",["226"],"import React from \"react\";\nimport Api from \"../data/Api\";\nimport User from \"../data/User\";\nimport { ReactComponent as Spinner } from \"../assets/svg/spinner.svg\";\nimport RequestsTable from \"../components/RequestsTable\";\n\nclass Requests extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      requests: this.props.user.requests,\n      pending: false,\n      users: {},\n    };\n\n    this.getRequests = this.getRequests.bind(this);\n  }\n\n  componentDidMount() {\n    this.getRequests();\n    this.heartbeat = setInterval(() => this.getRequests(true), 30000);\n  }\n\n  componentDidUpdate() {\n    if (this.props.user.requests !== this.state.requests) {\n      this.setState({\n        requests: this.props.user.requests,\n      });\n    }\n    if (Object.keys(this.state.requests).length > 0)\n      Object.keys(this.state.requests).map((key) => {\n        let req = this.state.requests[key];\n        for (let i = 0; i < req.users.length; i++) {\n          if (!this.props.api.users[req.users[i]]) {\n            console.log(req.users[i]);\n            Api.getUser(req.users[i]);\n          }\n        }\n      });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.heartbeat);\n  }\n\n  getRequests(live = false) {\n    if (!this.state.requests || live) {\n      User.getRequests();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"requests--wrap\">\n        {this.state.pending ? (\n          <div className=\"spinner--requests\">\n            <Spinner />\n          </div>\n        ) : (\n          <>\n            <section>\n              <p className=\"main-title\">Requests</p>\n            </section>\n            <section>\n              <RequestsTable requests={this.state.requests} api={this.props.api} />\n            </section>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Requests;\n","/Users/ashleydyson/Documents/Petio/petio/admin/src/components/RequestsTable.js",["227"],"import React from \"react\";\nimport { ReactComponent as MovieIcon } from \"../assets/svg/movie.svg\";\nimport { ReactComponent as TvIcon } from \"../assets/svg/tv.svg\";\n\nclass RequestsTable extends React.Component {\n  getUsername(id) {\n    if (!this.props.api.users) {\n      return null;\n    } else if (id in this.props.api.users) {\n      return this.props.api.users[id].title;\n    } else {\n      return null;\n    }\n  }\n\n  typeIcon(type) {\n    let icon = null;\n    switch (type) {\n      case \"movie\":\n        icon = <MovieIcon />;\n        break;\n      case \"tv\":\n        icon = <TvIcon />;\n        break;\n      default:\n        icon = null;\n    }\n\n    return <span className=\"requests--icon\">{icon}</span>;\n  }\n\n  calcDate(diff) {\n    var day = 1000 * 60 * 60 * 24;\n\n    var days = Math.ceil(diff / day);\n    var months = Math.floor(days / 31);\n    var years = Math.floor(months / 12);\n    days = days - months * 31;\n    months = months - years * 12;\n\n    var message = \"\";\n    message += years ? years + \" yr \" : \"\";\n    message += months ? months + \" m \" : \"\";\n    message += days ? days + \" d \" : \"\";\n\n    return message;\n  }\n\n  children(req) {\n    if (req.children.length === 0) {\n      return null;\n    }\n    let render = [];\n    req.children.map((server) => {\n      let type = req.type;\n\n      // let prog = (child.sizeleft / child.size - 1) * -1 * 100;\n      if (server.status.length > 0) {\n        render.push(\n          server.status.map((child, row) => {\n            if (!child) {\n              console.log(req);\n              return null;\n            }\n\n            let prog = (child.sizeleft / child.size - 1) * -1 * 100;\n            return (\n              <>\n                {row === 0 ? (\n                  <tr className=\"sub\">\n                    <td colSpan=\"5\">\n                      <p>Server: {server.info.serverName}</p>\n                    </td>\n                  </tr>\n                ) : null}\n                <tr className=\"child\">\n                  <td>\n                    {type === \"tv\" ? (\n                      <p>\n                        Series: {child.episode.seasonNumber} Episode: {child.episode.episodeNumber}\n                      </p>\n                    ) : null}\n                    {type === \"movie\" ? <p>Movie</p> : null}\n                  </td>\n                  <td>\n                    <span className=\"requests--quality\">{child.quality.quality.name}</span>\n                  </td>\n                  <td>\n                    {\" \"}\n                    <div className=\"requests--prog--wrap\">\n                      <div className=\"requests--prog\">\n                        <span\n                          className=\"requests--prog--active\"\n                          style={{\n                            width: prog + \"%\",\n                          }}\n                        ></span>\n                      </div>\n\n                      {(child.status !== \"Downloading\" && child.status !== \"downloading\") || !child.timeleft ? (\n                        <p>\n                          <strong className=\"capitalise\">{child.status}</strong>\n                        </p>\n                      ) : (\n                        <p>\n                          Time left <strong>{child.timeleft}</strong>\n                        </p>\n                      )}\n                    </div>\n                  </td>\n                  <td></td>\n                </tr>\n              </>\n            );\n          })\n        );\n      } else {\n        return null;\n      }\n    });\n    return render;\n  }\n\n  reqState(req) {\n    if (req.children.length > 0) {\n      for (let r = 0; r < req.children.length; r++) {\n        if (req.children[r].status.length > 0) {\n          return <span className=\"requests--status requests--status__orange\">Downloading</span>;\n        }\n\n        if (req.children[r].info.downloaded || req.children[r].info.movieFile) {\n          return <span className=\"requests--status requests--status__good\">Downloaded</span>;\n        }\n\n        if (req.children[r].info.message === \"NotFound\") {\n          return <span className=\"requests--status requests--status__bad\">Removed</span>;\n        }\n\n        if (req.type === \"tv\" && req.children[r].info) {\n          if (req.children[r].info.episodeCount === req.children[r].info.episodeFileCount) {\n            return <span className=\"requests--status requests--status__good\">Downloaded</span>;\n          }\n\n          if (req.children[r].info.seasons) {\n            let missing = false;\n            for (let season of req.children[r].info.seasons) {\n              if (season.statistics.percentOfEpisodes !== 100) missing = true;\n            }\n\n            if (!missing) {\n              return <span className=\"requests--status requests--status__good\">Downloaded</span>;\n            } else {\n              return <span className=\"requests--status requests--status__bad\">Unavailable</span>;\n            }\n          }\n        }\n\n        if (req.type === \"movie\" && req.children[r].info) {\n          if (req.children[r].info.inCinemas || req.children[r].info.digitalRelease) {\n            if (req.children[r].info.inCinemas) {\n              var diff = Math.ceil(new Date(req.children[r].info.inCinemas) - new Date());\n              if (diff > 0) {\n                return <span className=\"requests--status requests--status__blue\">~{this.calcDate(diff)}</span>;\n              }\n            }\n            if (req.children[r].info.digitalRelease) {\n              let digitalDate = new Date(req.children[r].info.digitalRelease);\n              if (new Date() - digitalDate < 0) {\n                return <span className=\"requests--status requests--status__cinema\">In Cinemas</span>;\n              } else {\n                return <span className=\"requests--status requests--status__bad\">Unavailable</span>;\n              }\n            } else {\n              return <span className=\"requests--status requests--status__bad\">Unavailable</span>;\n            }\n          }\n        }\n      }\n    }\n\n    // if (req.type === \"tv\" && req.info) {\n    //   if (req.info.episodeCount === req.info.episodeFileCount) {\n    //     return <span className=\"requests--status requests--status__good\">Downloaded</span>;\n    //   }\n\n    //   if (req.info.seasons) {\n    //     let missing = false;\n    //     for (let season of req.info.seasons) {\n    //       if (season.statistics.percentOfEpisodes !== 100) missing = true;\n    //     }\n\n    //     if (!missing) {\n    //       return <span className=\"requests--status requests--status__good\">Downloaded</span>;\n    //     } else {\n    //       return <span className=\"requests--status requests--status__bad\">Unavailable</span>;\n    //     }\n    //   }\n    // }\n\n    // if (req.type === \"movie\" && req.info) {\n    //   if (req.info.inCinemas || req.info.digitalRelease) {\n    //     if (req.info.inCinemas) {\n    //       var diff = Math.floor(new Date(req.info.inCinemas) - new Date());\n    //       if (diff > 0) {\n    //         return <span className=\"requests--status requests--status__blue\">~{this.calcDate(diff)}</span>;\n    //       }\n    //     }\n    //     if (req.info.digitalRelease) {\n    //       let digitalDate = new Date(req.info.digitalRelease);\n    //       if (new Date() - digitalDate < 0) {\n    //         return <span className=\"requests--status requests--status__cinema\">In Cinemas</span>;\n    //       } else {\n    //         return <span className=\"requests--status requests--status__bad\">Unavailable</span>;\n    //       }\n    //     } else {\n    //       return <span className=\"requests--status requests--status__bad\">Unavailable</span>;\n    //     }\n    //   }\n    // }\n\n    return <span className=\"requests--status requests--status__manual\">No status</span>;\n  }\n\n  render() {\n    return (\n      <table className=\"generic-table generic-table__rounded\">\n        <thead>\n          <tr>\n            <th className=\"fixed\">Title</th>\n            <th>Type</th>\n            <th>Status</th>\n            <th>Users</th>\n\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(this.props.requests).length === 0 ? (\n            <tr>\n              <td>No requests</td>\n\n              <td></td>\n              <td></td>\n              <td></td>\n              <td></td>\n            </tr>\n          ) : (\n            Object.keys(this.props.requests).map((key) => {\n              let req = this.props.requests[key];\n\n              // for (let i = 0; i < )\n\n              // if (req.status.length > 0) {\n              //   active = req.status.map((child) => {\n              //     let type = req.type;\n              //     let prog = (child.sizeleft / child.size - 1) * -1 * 100;\n              //     return (\n              //       <tr className=\"child\">\n              //         <td></td>\n              //         <td>\n              //           {type === \"tv\" ? (\n              //             <p>\n              //               Series: {child.episode.seasonNumber} Episode: {child.episode.episodeNumber}\n              //             </p>\n              //           ) : null}\n              //           {type === \"movie\" ? <p>Movie</p> : null}\n              //         </td>\n              //         <td>\n              //           <span className=\"requests--quality\">{child.quality.quality.name}</span>\n              //         </td>\n              //         <td>\n              //           <div className=\"requests--prog--wrap\">\n              //             <div className=\"requests--prog\">\n              //               <span\n              //                 className=\"requests--prog--active\"\n              //                 style={{\n              //                   width: prog + \"%\",\n              //                 }}\n              //               ></span>\n              //             </div>\n\n              //             {(child.status !== \"Downloading\" && child.status !== \"downloading\") || !child.timeleft ? (\n              //               <p>\n              //                 <strong className=\"capitalise\">{child.status}</strong>\n              //               </p>\n              //             ) : (\n              //               <p>\n              //                 Time left <strong>{child.timeleft}</strong>\n              //               </p>\n              //             )}\n              //           </div>\n              //         </td>\n              //         <td></td>\n              //       </tr>\n              //     );\n              //   });\n              // }\n\n              return (\n                <React.Fragment key={key}>\n                  <tr>\n                    <td className=\"fixed\">{req.title}</td>\n                    <td>{this.typeIcon(req.type)}</td>\n                    <td>\n                      {this.reqState(req)}\n                      {req.sonarrId.length > 0 ? <span className=\"requests--status requests--status__sonarr\">Sonarr</span> : null}\n                      {req.radarrId.length > 0 ? <span className=\"requests--status requests--status__radarr\">Radarr</span> : null}\n                    </td>\n                    <td>\n                      {req.users.map((user, i) => {\n                        return <p key={`${req.id}_${user}_${i}`}>{this.getUsername(user)}</p>;\n                      })}\n                    </td>\n                    <td></td>\n                  </tr>\n                  {this.children(req)}\n                </React.Fragment>\n              );\n            })\n          )}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default RequestsTable;\n","/Users/ashleydyson/Documents/Petio/petio/admin/src/page/settings/modal.js",[],"/Users/ashleydyson/Documents/Petio/petio/admin/src/page/Users.js",["228"],"import React from \"react\";\nimport Api from \"../data/Api\";\n\nclass Users extends React.Component {\n  render() {\n    return (\n      <>\n        <section>\n          <p className=\"main-title\">User Roles</p>\n        </section>\n        <section></section>\n        <section>\n          <p className=\"main-title\">Users</p>\n        </section>\n        <section>\n          <table className=\"generic-table generic-table__rounded\">\n            <thead>\n              <tr>\n                <th>Title</th>\n                <th>Username</th>\n                <th>Email</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.keys(this.props.api.users).map((u) => {\n                let user = this.props.api.users[u];\n                return (\n                  <tr key={user._id}>\n                    <td>{user.title}</td>\n                    <td>{user.username}</td>\n                    <td>{user.email}</td>\n                    <td></td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </section>\n      </>\n    );\n  }\n}\n\nexport default Users;\n",{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":14,"column":2,"nodeType":"235","messageId":"236","endLine":16,"endColumn":3},{"ruleId":"237","severity":1,"message":"238","line":2,"column":10,"nodeType":"239","messageId":"240","endLine":2,"endColumn":17},{"ruleId":"241","severity":1,"message":"242","line":13,"column":1,"nodeType":"243","messageId":"244","endLine":15,"endColumn":2},{"ruleId":"237","severity":1,"message":"245","line":61,"column":7,"nodeType":"239","messageId":"240","endLine":61,"endColumn":15},{"ruleId":"246","severity":1,"message":"247","line":100,"column":33,"nodeType":"248","messageId":"249","endLine":100,"endColumn":35},{"ruleId":"246","severity":1,"message":"247","line":119,"column":21,"nodeType":"248","messageId":"249","endLine":119,"endColumn":23},{"ruleId":"246","severity":1,"message":"247","line":164,"column":36,"nodeType":"248","messageId":"249","endLine":164,"endColumn":38},{"ruleId":"250","severity":1,"message":"251","line":3,"column":1,"nodeType":"252","endLine":34,"endColumn":2},{"ruleId":"253","severity":1,"message":"254","line":50,"column":12,"nodeType":"255","endLine":52,"endColumn":14},{"ruleId":"233","severity":1,"message":"234","line":14,"column":2,"nodeType":"235","messageId":"236","endLine":16,"endColumn":3},{"ruleId":"237","severity":1,"message":"256","line":2,"column":37,"nodeType":"239","messageId":"240","endLine":2,"endColumn":41},{"ruleId":"237","severity":1,"message":"257","line":2,"column":43,"nodeType":"239","messageId":"240","endLine":2,"endColumn":53},{"ruleId":"237","severity":1,"message":"258","line":2,"column":55,"nodeType":"239","messageId":"240","endLine":2,"endColumn":65},{"ruleId":"253","severity":1,"message":"254","line":46,"column":8,"nodeType":"255","endLine":49,"endColumn":10},{"ruleId":"253","severity":1,"message":"254","line":61,"column":8,"nodeType":"255","endLine":64,"endColumn":10},{"ruleId":"250","severity":1,"message":"259","line":32,"column":1,"nodeType":"252","endLine":61,"endColumn":3},{"ruleId":"237","severity":1,"message":"260","line":3,"column":7,"nodeType":"239","messageId":"240","endLine":3,"endColumn":13},{"ruleId":"233","severity":1,"message":"234","line":14,"column":2,"nodeType":"235","messageId":"236","endLine":16,"endColumn":3},{"ruleId":"250","severity":1,"message":"251","line":3,"column":1,"nodeType":"252","endLine":47,"endColumn":2},{"ruleId":"250","severity":1,"message":"251","line":3,"column":1,"nodeType":"252","endLine":165,"endColumn":2},{"ruleId":"261","severity":1,"message":"262","line":31,"column":7,"nodeType":"263","messageId":"244","endLine":31,"endColumn":13},{"ruleId":"261","severity":1,"message":"264","line":34,"column":7,"nodeType":"263","messageId":"244","endLine":34,"endColumn":11},{"ruleId":"261","severity":1,"message":"265","line":35,"column":7,"nodeType":"263","messageId":"244","endLine":35,"endColumn":14},{"ruleId":"261","severity":1,"message":"262","line":215,"column":9,"nodeType":"263","messageId":"244","endLine":215,"endColumn":15},{"ruleId":"261","severity":1,"message":"262","line":240,"column":7,"nodeType":"263","messageId":"244","endLine":240,"endColumn":13},{"ruleId":"266","severity":1,"message":"267","line":247,"column":8,"nodeType":"268","endLine":247,"endColumn":23},{"ruleId":"261","severity":1,"message":"262","line":31,"column":7,"nodeType":"263","messageId":"244","endLine":31,"endColumn":13},{"ruleId":"261","severity":1,"message":"264","line":34,"column":7,"nodeType":"263","messageId":"244","endLine":34,"endColumn":11},{"ruleId":"261","severity":1,"message":"265","line":35,"column":7,"nodeType":"263","messageId":"244","endLine":35,"endColumn":14},{"ruleId":"261","severity":1,"message":"262","line":215,"column":9,"nodeType":"263","messageId":"244","endLine":215,"endColumn":15},{"ruleId":"261","severity":1,"message":"262","line":240,"column":7,"nodeType":"263","messageId":"244","endLine":240,"endColumn":13},{"ruleId":"237","severity":1,"message":"269","line":4,"column":8,"nodeType":"239","messageId":"240","endLine":4,"endColumn":11},{"ruleId":"246","severity":1,"message":"247","line":448,"column":25,"nodeType":"248","messageId":"249","endLine":448,"endColumn":27},{"ruleId":"250","severity":1,"message":"259","line":3,"column":1,"nodeType":"252","endLine":7,"endColumn":3},{"ruleId":"250","severity":1,"message":"259","line":3,"column":1,"nodeType":"252","endLine":5,"endColumn":3},{"ruleId":"237","severity":1,"message":"257","line":2,"column":10,"nodeType":"239","messageId":"240","endLine":2,"endColumn":20},{"ruleId":"237","severity":1,"message":"256","line":2,"column":22,"nodeType":"239","messageId":"240","endLine":2,"endColumn":26},{"ruleId":"237","severity":1,"message":"238","line":3,"column":10,"nodeType":"239","messageId":"240","endLine":3,"endColumn":17},{"ruleId":"237","severity":1,"message":"270","line":5,"column":10,"nodeType":"239","messageId":"240","endLine":5,"endColumn":23},{"ruleId":"253","severity":1,"message":"254","line":130,"column":7,"nodeType":"255","endLine":130,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":136,"column":34,"nodeType":"248","messageId":"249","endLine":136,"endColumn":36},{"ruleId":"246","severity":1,"message":"247","line":32,"column":50,"nodeType":"248","messageId":"249","endLine":32,"endColumn":52},{"ruleId":"246","severity":1,"message":"271","line":54,"column":31,"nodeType":"248","messageId":"272","endLine":54,"endColumn":33},{"ruleId":"237","severity":1,"message":"269","line":2,"column":8,"nodeType":"239","messageId":"240","endLine":2,"endColumn":11},"no-native-reassign",["273"],"no-negated-in-lhs",["274"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","no-extend-native","Number prototype is read only, properties should not be added.","AssignmentExpression","unexpected","'msPerDay' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'withRouter' is defined but never used.","'useHistory' is defined but never used.","Assign object to a variable before exporting as module default","'widths' is assigned a value but never used.","no-dupe-keys","Duplicate key 'active'.","ObjectExpression","Duplicate key 'path'.","Duplicate key 'profile'.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Api' is defined but never used.","'LazyLoadImage' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation"]