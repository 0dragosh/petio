[{"/Users/ashleydyson/Documents/Petio/petio/frontend/src/index.js":"1","/Users/ashleydyson/Documents/Petio/petio/frontend/src/serviceWorker.js":"2","/Users/ashleydyson/Documents/Petio/petio/frontend/src/App.js":"3","/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/store.js":"4","/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/auth/index.js":"5","/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/Issues.js":"6","/Users/ashleydyson/Documents/Petio/petio/frontend/src/pages/Season.js":"7","/Users/ashleydyson/Documents/Petio/petio/frontend/src/pages/Search.js":"8","/Users/ashleydyson/Documents/Petio/petio/frontend/src/pages/Actor.js":"9","/Users/ashleydyson/Documents/Petio/petio/frontend/src/pages/Movie.js":"10","/Users/ashleydyson/Documents/Petio/petio/frontend/src/pages/Requests.js":"11","/Users/ashleydyson/Documents/Petio/petio/frontend/src/pages/Profile.js":"12","/Users/ashleydyson/Documents/Petio/petio/frontend/src/pages/Shows.js":"13","/Users/ashleydyson/Documents/Petio/petio/frontend/src/pages/Movies.js":"14","/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/Sidebar.js":"15","/Users/ashleydyson/Documents/Petio/petio/frontend/src/pages/Series.js":"16","/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/reducers.js":"17","/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/Plex/index.js":"18","/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/User/index.js":"19","/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/Api/index.js":"20","/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/actionTypes.js":"21","/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/MovieCard.js":"22","/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/PersonCard.js":"23","/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/CarouselLoading.js":"24","/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/Review.js":"25","/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/CarouselLoadingPerson.js":"26","/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/MovieShowLoading.js":"27","/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/ReviewsLists.js":"28","/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/TvCard.js":"29","/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/Carousel.js":"30","/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/RequestCard.js":"31","/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/History.js":"32","/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/User/reducer.js":"33","/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/Plex/reducer.js":"34","/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/Api/reducer.js":"35","/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/Popular.js":"36","/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/Plex/actions.js":"37","/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/User/actions.js":"38","/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/Api/actions.js":"39","/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/User/api.js":"40","/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/Plex/api.js":"41","/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/Api/api.js":"42","/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/MovieShowTop.js":"43","/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/MovieShowOverview.js":"44"},{"size":595,"mtime":1607428895092,"results":"45","hashOfConfig":"46"},{"size":5086,"mtime":1607428895094,"results":"47","hashOfConfig":"46"},{"size":7621,"mtime":1610714075501,"results":"48","hashOfConfig":"46"},{"size":376,"mtime":1607428895090,"results":"49","hashOfConfig":"46"},{"size":598,"mtime":1610446797793,"results":"50","hashOfConfig":"46"},{"size":5103,"mtime":1610556554530,"results":"51","hashOfConfig":"46"},{"size":8390,"mtime":1610741929509,"results":"52","hashOfConfig":"46"},{"size":5290,"mtime":1607428895093,"results":"53","hashOfConfig":"46"},{"size":7372,"mtime":1610739586693,"results":"54","hashOfConfig":"46"},{"size":7079,"mtime":1610989212327,"results":"55","hashOfConfig":"46"},{"size":2823,"mtime":1608570299659,"results":"56","hashOfConfig":"46"},{"size":4291,"mtime":1607428895093,"results":"57","hashOfConfig":"46"},{"size":1430,"mtime":1610546256296,"results":"58","hashOfConfig":"46"},{"size":1453,"mtime":1610546256295,"results":"59","hashOfConfig":"46"},{"size":4149,"mtime":1610453313584,"results":"60","hashOfConfig":"46"},{"size":11009,"mtime":1610989198444,"results":"61","hashOfConfig":"46"},{"size":236,"mtime":1607428895090,"results":"62","hashOfConfig":"46"},{"size":70,"mtime":1607428895090,"results":"63","hashOfConfig":"46"},{"size":246,"mtime":1610555633173,"results":"64","hashOfConfig":"46"},{"size":268,"mtime":1607463865133,"results":"65","hashOfConfig":"46"},{"size":1152,"mtime":1607428895088,"results":"66","hashOfConfig":"46"},{"size":3482,"mtime":1610741426871,"results":"67","hashOfConfig":"46"},{"size":1478,"mtime":1608589555436,"results":"68","hashOfConfig":"46"},{"size":1744,"mtime":1607428895086,"results":"69","hashOfConfig":"46"},{"size":1925,"mtime":1608570335383,"results":"70","hashOfConfig":"46"},{"size":1780,"mtime":1607428895086,"results":"71","hashOfConfig":"46"},{"size":3071,"mtime":1610625569142,"results":"72","hashOfConfig":"46"},{"size":3853,"mtime":1610127840287,"results":"73","hashOfConfig":"46"},{"size":3308,"mtime":1610741075837,"results":"74","hashOfConfig":"46"},{"size":3783,"mtime":1610998105902,"results":"75","hashOfConfig":"46"},{"size":2257,"mtime":1607428895088,"results":"76","hashOfConfig":"46"},{"size":3971,"mtime":1608570299657,"results":"77","hashOfConfig":"46"},{"size":1207,"mtime":1607428895091,"results":"78","hashOfConfig":"46"},{"size":251,"mtime":1607428895090,"results":"79","hashOfConfig":"46"},{"size":3414,"mtime":1608570299658,"results":"80","hashOfConfig":"46"},{"size":3517,"mtime":1610738791489,"results":"81","hashOfConfig":"46"},{"size":3421,"mtime":1607428895089,"results":"82","hashOfConfig":"46"},{"size":2560,"mtime":1610555738239,"results":"83","hashOfConfig":"46"},{"size":4182,"mtime":1610722959670,"results":"84","hashOfConfig":"46"},{"size":2123,"mtime":1610908627164,"results":"85","hashOfConfig":"46"},{"size":892,"mtime":1607428895090,"results":"86","hashOfConfig":"46"},{"size":2256,"mtime":1610721253105,"results":"87","hashOfConfig":"46"},{"size":3390,"mtime":1610989090877,"results":"88","hashOfConfig":"46"},{"size":12283,"mtime":1610989101059,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"tvd7pb",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"92"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"92"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ashleydyson/Documents/Petio/petio/frontend/src/index.js",[],["199","200"],"/Users/ashleydyson/Documents/Petio/petio/frontend/src/serviceWorker.js",[],"/Users/ashleydyson/Documents/Petio/petio/frontend/src/App.js",["201","202","203","204","205"],"import React from \"react\";\nimport { HashRouter, Switch, Route, Link, withRouter, useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Plex from \"./data/Plex\";\nimport User from \"./data/User\";\nimport Api from \"./data/Api\";\nimport Sidebar from \"./components/Sidebar\";\nimport Search from \"./pages/Search\";\nimport Series from \"./pages/Series\";\nimport Season from \"./pages/Season\";\nimport Movie from \"./pages/Movie\";\nimport Actor from \"./pages/Actor\";\nimport Issues from \"./components/Issues\";\nimport Profile from \"./pages/Profile\";\nimport Movies from \"./pages/Movies\";\nimport Requests from \"./pages/Requests\";\nimport Shows from \"./pages/Shows\";\nimport { ReactComponent as Spinner } from \"./assets/svg/spinner.svg\";\nimport pjson from \"../package.json\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mb_login: false,\n      activeServerCheck: false,\n      issuesOpen: false,\n      isLoggedIn: this.props.user.logged_in,\n      loading: true,\n      configChecked: false,\n      loginMsg: false,\n    };\n\n    this.openIssues = this.openIssues.bind(this);\n    this.closeIssues = this.closeIssues.bind(this);\n    this.loginForm = this.loginForm.bind(this);\n    this.inputChange = this.inputChange.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  inputChange(e) {\n    const target = e.target;\n    const name = target.name;\n    let value = target.value;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  loginForm(e) {\n    e.preventDefault();\n    let username = this.state.username;\n\n    this.login(username);\n  }\n\n  login(username, cookie = false) {\n    if (!this.props.user.credentials || this.state.config === \"failed\") {\n      return;\n    }\n    this.setState({\n      loading: true,\n    });\n    User.login(username, cookie)\n      .then((res) => {\n        this.setState({\n          loading: false,\n          loginMsg: false,\n        });\n        if (res.error) {\n          alert(res.error);\n          return;\n        }\n        if (res.loggedIn) {\n          this.setState({\n            isLoggedIn: true,\n          });\n        }\n        if (res.admin) {\n          this.setState({\n            isAdmin: true,\n          });\n        }\n        User.getRequests();\n      })\n      .catch((error) => {\n        this.setState({\n          loginMsg: error,\n          loading: false,\n        });\n        localStorage.removeItem(\"loggedin\");\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"loggedin\");\n    localStorage.removeItem(\"adminloggedin\");\n    User.logout();\n    this.setState({\n      isLoggedIn: false,\n      isAdmin: false,\n    });\n  }\n\n  loginLocal() {\n    if (localStorage.getItem(\"loggedin\")) {\n      if (this.props.user.credentials) {\n        this.login(\"\", true);\n      } else {\n        setTimeout(() => {\n          this.loginLocal();\n        }, 500);\n      }\n    } else {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  openIssues() {\n    this.setState({\n      openIssues: true,\n    });\n  }\n\n  closeIssues() {\n    this.setState({\n      openIssues: false,\n    });\n  }\n\n  checkConfig() {\n    this.setState({\n      configChecked: true,\n    });\n    Api.checkConfig()\n      .then((res) => {\n        console.log(res);\n        this.setState({\n          config: res.config,\n          // loading: false,\n        });\n      })\n      .catch(() => {\n        this.setState({\n          error: true,\n          config: \"failed\",\n        });\n      });\n  }\n\n  componentDidUpdate() {\n    if (this.props.user.credentials && !this.state.configChecked) {\n      this.checkConfig();\n    }\n  }\n\n  componentDidMount() {\n    this.loginLocal();\n    if (this.state.openIssues) {\n      this.setState({\n        openIssues: false,\n      });\n    }\n  }\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className=\"login-wrap\">\n          <div className=\"spinner\">\n            <Spinner />\n          </div>\n        </div>\n      );\n    }\n    let user = this.props.api.current_user;\n    if (!this.state.isLoggedIn) {\n      return (\n        <div className=\"login-wrap\">\n          {!this.state.loading || !this.props.user.credentials ? (\n            <>\n              <div className=\"login--inner\">\n                <h1 className=\"logo\">\n                  Pet<span>io</span>\n                </h1>\n                <p className=\"main-title\">{!this.state.adminLogin ? \"Login\" : \"Admin Login\"}</p>\n                <form onSubmit={this.loginForm} autoComplete=\"on\">\n                  <p>Username / Email</p>\n                  <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.inputChange} autoComplete=\"username\" />\n                  {this.state.loginMsg ? <div className=\"msg msg__error msg__input\">{this.state.loginMsg}</div> : null}\n                  {this.state.config === \"failed\" ? <div className=\"msg msg__error msg__input\">API Not configured, please complete setup</div> : null}\n                  <button className=\"btn\">Login</button>\n                </form>\n              </div>\n              <p className=\"powered-by\">Petio build (alpha) {pjson.version}</p>\n            </>\n          ) : (\n            <div className=\"spinner\">\n              <Spinner />\n            </div>\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"page\">\n          <HashRouter>\n            <div className=\"sidebar\">\n              <Sidebar history={HashRouter.history} />\n            </div>\n\n            <Switch>\n              <Route exact path=\"/\">\n                <div className=\"page-wrap\">\n                  <Search />\n                </div>\n              </Route>\n              <Route exact path=\"/user\">\n                <div className=\"page-wrap\">\n                  <Profile logout={this.logout} />\n                </div>\n              </Route>\n              <Route exact path=\"/movie/:id\">\n                <Issues open={this.state.openIssues} close={this.closeIssues} />\n                <div className=\"page-wrap\">\n                  <Movie openIssues={this.openIssues} />\n                </div>\n              </Route>\n              <Route exact path=\"/series/:id\">\n                <Issues open={this.state.openIssues} close={this.closeIssues} />\n                <div className=\"page-wrap\">\n                  <Series openIssues={this.openIssues} />\n                </div>\n              </Route>\n              <Route exact path=\"/series/:id/season/:season\">\n                <Issues open={this.state.openIssues} close={this.closeIssues} />\n                <div className=\"page-wrap\">\n                  <Season openIssues={this.openIssues} />\n                </div>\n              </Route>\n              <Route path=\"/person/:id\">\n                <Actor />\n              </Route>\n              <Route exact path=\"/requests\">\n                <div className=\"page-wrap\">\n                  <Requests />\n                </div>\n              </Route>\n              {/* discovery pages */}\n              <Route exact path=\"/movies\">\n                <div className=\"page-wrap\">\n                  <Movies />\n                </div>\n              </Route>\n              <Route exact path=\"/tv\">\n                <div className=\"page-wrap\">\n                  <Shows />\n                </div>\n              </Route>\n            </Switch>\n          </HashRouter>\n        </div>\n      );\n    }\n  }\n}\n\nfunction AppContainer(props) {\n  return <App plex={props.plex} api={props.api} user={props.user} />;\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    plex: state.plex,\n    api: state.api,\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps)(AppContainer);\n","/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/store.js",[],"/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/auth/index.js",[],"/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/Issues.js",["206"],"import React from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport User from \"../data/User\";\n\nclass Issues extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: false,\n      open: this.props.open,\n      type: \"\",\n      option: \"\",\n      detail: \"\",\n    };\n\n    this.inputChange = this.inputChange.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  inputChange(e) {\n    const target = e.target;\n    const name = target.name;\n    let value = target.value;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  async submit() {\n    if (!this.state.option) {\n      return;\n    }\n    let id = this.state.id;\n    let user = this.props.user.current.id;\n    let type = this.state.type;\n    let data = this.props.api[`${type}_lookup`][id];\n    let title = false;\n    if (data) {\n      title = type === \"movie\" ? data.title : data.name;\n    }\n    console.log({\n      mediaId: id,\n      type: type,\n      title: title,\n      user: user,\n      issue: this.state.option,\n      comment: this.state.detail,\n    });\n    try {\n      await User.addIssue({\n        mediaId: id,\n        type: type,\n        title: title,\n        user: user,\n        issue: this.state.option,\n        comment: this.state.detail,\n      });\n      this.setState({\n        type: \"\",\n        option: \"\",\n        detail: \"\",\n      });\n      this.props.close();\n    } catch {\n      alert(\"Error adding issue, please try again later!\");\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.close();\n  }\n\n  componentDidUpdate() {\n    if (this.state.id !== this.props.match.params.id) {\n      let type;\n      switch (this.props.match.path) {\n        case \"/movie/:id\":\n          type = \"movie\";\n          break;\n        case \"/series/:id\":\n          type = \"series\";\n          break;\n        default:\n          type = \"unknown\";\n      }\n      this.props.close();\n      this.setState({\n        id: this.props.match.params.id,\n        type: type,\n      });\n    }\n\n    if (this.props.open !== this.state.open) {\n      this.setState({\n        open: this.props.open,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className={`issues--wrap ${this.state.open ? \"active\" : \"\"}`}>\n        <div className=\"issues--inner\">\n          <div className=\"issues--top\">\n            <h3>Report an issue</h3>\n          </div>\n          <div className=\"issues--main\">\n            <section>\n              <p style={{ margin: 0 }}>\n                We try our best to provide good quality content without any problems, but sometimes things go wrong. Please use this form to let us know of any issues you've had whilst watching Plex\n                and we will do our best to fix them!\n              </p>\n            </section>\n            <section>\n              <p className=\"sub-title mb--1\">Details</p>\n              <p>Please fill out the fields below relating to the issue you are having with this show / movie.</p>\n              <input type=\"hidden\" name=\"id\" defaultValue={this.state.id} readOnly />\n              <input type=\"hidden\" name=\"type\" defaultValue={this.state.type} readOnly />\n              <input type=\"hidden\" name=\"user\" value={this.props.user.current.id} readOnly />\n              <div className=\"styled-input--select\">\n                <select name=\"option\" value={this.state.option} onChange={this.inputChange}>\n                  <option value=\"\">Choose an option</option>\n                  {this.state.type === \"movie\" ? (\n                    <>\n                      <option value=\"subs\">Missing Subtitles</option>\n                      <option value=\"bad-video\">Bad Quality / Video Issue</option>\n                      <option value=\"bad-audio\">Audio Issue / Audio Sync</option>\n                    </>\n                  ) : (\n                    <>\n                      <option value=\"episodes\">Missing Episodes</option>\n                      <option value=\"subs\">Missing Subtitles</option>\n                      <option value=\"bad-video\">Bad Quality / Video Issue</option>\n                      <option value=\"bad-audio\">Audio Issue / Audio Sync</option>\n                    </>\n                  )}\n                  <option value=\"other\">Other, please specify</option>\n                </select>\n              </div>\n              <textarea className=\"styled-input--textarea\" value={this.state.detail} placeholder=\"Notes\" name=\"detail\" onChange={this.inputChange}></textarea>\n            </section>\n            <div className=\"btn btn__square bad\" onClick={this.props.close}>\n              Cancel\n            </div>\n            <div className=\"btn btn__square save-issue\" onClick={this.submit}>\n              Submit\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nIssues = withRouter(Issues);\n\nfunction IssuesContainer(props) {\n  return <Issues api={props.api} user={props.user} close={props.close} open={props.open} />;\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    user: state.user,\n    api: state.api,\n  };\n};\n\nexport default connect(mapStateToProps)(IssuesContainer);\n","/Users/ashleydyson/Documents/Petio/petio/frontend/src/pages/Season.js",["207","208","209"],"import React from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Api from \"../data/Api\";\n\nimport MovieShowTop from \"../components/MovieShowTop\";\nimport MovieShowOverview from \"../components/MovieShowOverview\";\nimport User from \"../data/User\";\nimport Review from \"../components/Review\";\nimport { ReactComponent as BackIcon } from \"../assets/svg/back.svg\";\n\nclass Season extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      onServer: false,\n      show: this.props.match.params.id,\n      season: this.props.match.params.season,\n      requested: false,\n    };\n\n    this.daysTillAir = this.daysTillAir.bind(this);\n    this.getReviews = this.getReviews.bind(this);\n  }\n\n  componentDidMount() {\n    let page = document.querySelectorAll(\".page-wrap\")[0];\n    page.scrollTop = 0;\n    window.scrollTo(0, 0);\n    let id = this.props.match.params.id;\n    let season = this.props.match.params.season;\n    this.getReviews();\n\n    if (!this.props.api.series_lookup[id]) {\n      // check for cached\n      Api.series(id);\n    } else if (this.props.api.series_lookup[id].isMinified) {\n      Api.series(id);\n    }\n  }\n\n  getReviews() {\n    let id = this.props.match.params.id;\n    User.getReviews(id);\n  }\n\n  daysTillAir(airDate) {\n    var oneDay = 24 * 60 * 60 * 1000;\n    var secondDate = new Date();\n    var firstDate = new Date(airDate);\n    let days = Math.round(Math.abs((firstDate.setHours(0, 0, 0, 0) - secondDate.setHours(0, 0, 0, 0)) / oneDay));\n\n    if (firstDate < secondDate) {\n      return <span className=\"aired\">Has aired on tv</span>;\n    }\n\n    return days < 100 ? (\n      <span className=\"not-aired\">\n        airs in {days} {days > 1 ? \"days\" : \"day\"}\n      </span>\n    ) : (\n      <span className=\"not-aired\">Not yet aired</span>\n    );\n  }\n\n  render() {\n    let id = this.props.match.params.id;\n    let season = this.props.match.params.season;\n    let seriesData = Object.assign({}, this.props.api.series_lookup[id]);\n    let seasonData = this.props.api.series_lookup[id] ? this.props.api.series_lookup[id].seasonData[season] : false;\n    if (seriesData) seriesData.poster_path = seasonData ? seasonData.poster_path : seriesData.poster_path;\n    console.log(seasonData);\n    let now = new Date();\n    now.setHours(0, 0, 0, 0);\n    if (!seriesData || !seasonData) {\n      return (\n        <div className=\"page-wrap\">\n          <p>Loading...</p>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"media-wrap\" data-id={seriesData.imdb_id} key={`${seriesData.title}__wrap`}>\n          <Review id={this.props.match.params.id} user={this.props.user.current} active={this.state.reviewOpen} closeReview={this.closeReview} getReviews={this.getReviews} item={seriesData} />\n          <MovieShowTop mediaData={seriesData} trailer={this.state.trailer} requested={this.state.requested} request={this.request} openIssues={this.props.openIssues} />\n          <div className=\"media-content\">\n            <section>\n              <div className=\"quick-view\">\n                <div className=\"side-content\">\n                  <div className=\"media-action\">\n                    <Link to={`/series/${id}`} className=\"btn btn__square\">\n                      <BackIcon />\n                      Back to {seriesData.name}\n                    </Link>\n                  </div>\n                </div>\n                <div className=\"detail--wrap\">\n                  <div className=\"detail--content\">\n                    <div className=\"media--actions__mob\">\n                      <Link to={`/series/${id}`} className=\"btn btn__square\">\n                        <BackIcon />\n                        Back to {seriesData.name}\n                      </Link>\n                    </div>\n                    <div className=\"detail--bar\">\n                      <p>{new Date(seasonData.air_date).getFullYear()}</p>\n                      <div className=\"detail--bar--sep\">·</div>\n                      <p>{seasonData.name}</p>\n                    </div>\n                    <p className=\"sub-title mb--1\">Overview</p>\n                    <p className=\"overview\">{seasonData.overview}</p>\n                  </div>\n                </div>\n              </div>\n            </section>\n            <section>\n              <h3 className=\"sub-title mb--1\">{`${seasonData.episodes.length} Episodes`}</h3>\n              <div className=\"season-episodes\">\n                {seasonData.episodes.map((episode) => {\n                  let airDate = episode.air_date ? Date.parse(episode.air_date) : false;\n                  return (\n                    <div className={\"season-episode \" + (airDate < now ? \"aired\" : \"not-aired\")}>\n                      <div className=\"season-episode--img\">\n                        <img src={`https://image.tmdb.org/t/p/w500/${episode.still_path ? episode.still_path : seriesData.poster_path}`} />\n                      </div>\n                      <div className=\"season-episode--info\">\n                        <p className=\"upper small ep-num\">\n                          Season {episode.season_number}: Episode {episode.episode_number} - {this.daysTillAir(airDate)}\n                        </p>\n                        <h4 className=\"sub-title\">{episode.name}</h4>\n                        <p className=\"small detail\">{episode.overview}</p>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </section>\n          </div>\n        </div>\n      );\n      // if (seriesData.isMinified) {\n      //   return <p>Loading...</p>;\n      // }\n      // return (\n      //   <div\n      //     className=\"page-wrap season-wrap\"\n      //     style={{\n      //       backgroundImage: \"url(https://image.tmdb.org/t/p/original/\" + seriesData.backdrop_path + \")\",\n      //     }}\n      //   >\n      //     <div className=\"season-inner\">\n      //       <div className=\"season-details\">\n      //         <div className=\"stick\">\n      //           <div>\n      //             <Link to={`/series/${id}`} className=\"btn btn__square\">\n      //               {seriesData.name}\n      //             </Link>\n      //           </div>\n      //           {seriesData.logo ? (\n      //             <div>\n      //               <img className=\"media-logo__small\" src={seriesData.logo} />\n      //             </div>\n      //           ) : null}\n      //           <h1 className=\"main-title\">{seasonData.name}</h1>\n      //           <p className=\"overview\">{seasonData.overview}</p>\n      //         </div>\n      //       </div>\n      //       <div className=\"season-episodes\">\n      //         <div className=\"season-episodes-inner\">\n      //           {seasonData.episodes.map((episode) => {\n      //             let airDate = episode.air_date ? Date.parse(episode.air_date) : false;\n      //             return (\n      //               <div className={\"season-episode \" + (airDate < now ? \"aired\" : \"not-aired\")}>\n      //                 <div className=\"season-episode--img\">\n      //                   <img src={`https://image.tmdb.org/t/p/w500/${episode.still_path}`} />\n      //                 </div>\n      //                 <div className=\"season-episode--info\">\n      //                   <p className=\"upper small ep-num\">\n      //                     Season {episode.season_number}: Episode {episode.episode_number} - {this.daysTillAir(airDate)}\n      //                   </p>\n      //                   <h4 className=\"sub-title\">{episode.name}</h4>\n      //                   <p className=\"small detail\">{episode.overview}</p>\n      //                 </div>\n      //                 <div className=\"season-episode--actions\">\n      //                   <button className=\"btn btn__square\">Request</button>\n      //                   <button className=\"btn btn__square\">Report an issue</button>\n      //                 </div>\n      //               </div>\n      //             );\n      //           })}\n      //         </div>\n      //       </div>\n      //     </div>\n      //   </div>\n      // );\n    }\n  }\n}\n\nSeason = withRouter(Season);\n\nfunction SeasonContainer(props) {\n  return <Season api={props.api} user={props.user} openIssues={props.openIssues} />;\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    api: state.api,\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps)(SeasonContainer);\n","/Users/ashleydyson/Documents/Petio/petio/frontend/src/pages/Search.js",["210"],"import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Api from '../data/Api';\nimport { ReactComponent as SearchIcon } from '../assets/svg/search.svg';\nimport MovieCard from '../components/MovieCard';\nimport TvCard from '../components/TvCard';\nimport Carousel from '../components/Carousel';\nimport PersonCard from '../components/PersonCard';\nimport CarouselLoading from '../components/CarouselLoading';\nimport CarouselLoadingPerson from '../components/CarouselLoadingPerson';\n\nclass Search extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tsearchTerm: '',\n\t\t\tsearchActive: false,\n\t\t\tisLoading: false,\n\t\t};\n\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\thandleChange(e) {\n\t\tif (e.currentTarget.value.length > 2) {\n\t\t\tlet term = e.currentTarget.value;\n\t\t\tthis.setState({\n\t\t\t\tisLoading: true,\n\t\t\t});\n\t\t\t// throttle search lookup during constant typing\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (term === this.state.searchTerm) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tisLoading: true,\n\t\t\t\t\t});\n\t\t\t\t\tApi.search(term)\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tisLoading: false,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tisLoading: false,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, 500);\n\t\t\tthis.setState({\n\t\t\t\tsearchTerm: e.currentTarget.value,\n\t\t\t\tsearchActive: true,\n\t\t\t});\n\t\t} else {\n\t\t\tApi.clearSearch();\n\t\t\tthis.setState({\n\t\t\t\tsearchTerm: e.currentTarget.value,\n\t\t\t\tsearchActive: false,\n\t\t\t\tisLoading: false,\n\t\t\t});\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tApi.getPopular();\n\n\t\tlet page = document.querySelectorAll('.page-wrap')[0];\n\t\tpage.scrollTop = 0;\n\t\twindow.scrollTo(0, 0);\n\t}\n\n\trender() {\n\t\tlet searchResults = (\n\t\t\t<>\n\t\t\t\t<section>\n\t\t\t\t\t<h3 className=\"sub-title mb--1\">Movies</h3>\n\t\t\t\t\t{this.props.api.search_results.movies.length > 0 ? (\n\t\t\t\t\t\t<Carousel>\n\t\t\t\t\t\t\t{this.props.api.search_results.movies.map(\n\t\t\t\t\t\t\t\t(movie) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<MovieCard\n\t\t\t\t\t\t\t\t\t\t\tkey={movie.id}\n\t\t\t\t\t\t\t\t\t\t\tmovie={movie}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Carousel>\n\t\t\t\t\t) : this.state.isLoading ? (\n\t\t\t\t\t\t<CarouselLoading />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p>No results</p>\n\t\t\t\t\t)}\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<h3 className=\"sub-title mb--1\">Shows</h3>\n\t\t\t\t\t{this.props.api.search_results.series.length > 0 ? (\n\t\t\t\t\t\t<Carousel>\n\t\t\t\t\t\t\t{this.props.api.search_results.series.map(\n\t\t\t\t\t\t\t\t(series) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<TvCard\n\t\t\t\t\t\t\t\t\t\t\tkey={series.id}\n\t\t\t\t\t\t\t\t\t\t\tseries={series}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Carousel>\n\t\t\t\t\t) : this.state.isLoading ? (\n\t\t\t\t\t\t<CarouselLoading />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p>No results</p>\n\t\t\t\t\t)}\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<h3 className=\"sub-title mb--1\">People</h3>\n\t\t\t\t\t{this.props.api.search_results.people.length > 0 ? (\n\t\t\t\t\t\t<Carousel>\n\t\t\t\t\t\t\t{this.props.api.search_results.people.map(\n\t\t\t\t\t\t\t\t(person) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PersonCard\n\t\t\t\t\t\t\t\t\t\t\tkey={person.id}\n\t\t\t\t\t\t\t\t\t\t\tperson={person}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Carousel>\n\t\t\t\t\t) : this.state.isLoading ? (\n\t\t\t\t\t\t<CarouselLoadingPerson />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p>No results</p>\n\t\t\t\t\t)}\n\t\t\t\t</section>\n\t\t\t</>\n\t\t);\n\t\tlet trending = (\n\t\t\t<>\n\t\t\t\t<section>\n\t\t\t\t\t<h3 className=\"sub-title mb--1\">Trending Movies</h3>\n\t\t\t\t\t{Object.keys(this.props.api.popular).length > 0 ? (\n\t\t\t\t\t\t<Carousel>\n\t\t\t\t\t\t\t{Object.keys(this.props.api.popular).length > 0\n\t\t\t\t\t\t\t\t? this.props.api.popular.movies.map((movie) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<MovieCard\n\t\t\t\t\t\t\t\t\t\t\t\tkey={movie.id}\n\t\t\t\t\t\t\t\t\t\t\t\tmovie={movie}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t</Carousel>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<CarouselLoading />\n\t\t\t\t\t)}\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<h3 className=\"sub-title mb--1\">Trending Shows</h3>\n\t\t\t\t\t{Object.keys(this.props.api.popular).length > 0 ? (\n\t\t\t\t\t\t<Carousel>\n\t\t\t\t\t\t\t{Object.keys(this.props.api.popular).length > 0\n\t\t\t\t\t\t\t\t? this.props.api.popular.tv.map((series) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<TvCard\n\t\t\t\t\t\t\t\t\t\t\t\tkey={series.id}\n\t\t\t\t\t\t\t\t\t\t\t\tseries={series}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t</Carousel>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<CarouselLoading />\n\t\t\t\t\t)}\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<h3 className=\"sub-title mb--1\">Trending People</h3>\n\t\t\t\t\t<Carousel>\n\t\t\t\t\t\t{Object.keys(this.props.api.popular).length > 0\n\t\t\t\t\t\t\t? this.props.api.popular.people.map((person) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PersonCard\n\t\t\t\t\t\t\t\t\t\t\tkey={person.id}\n\t\t\t\t\t\t\t\t\t\t\tperson={person}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t</Carousel>\n\t\t\t\t</section>\n\t\t\t</>\n\t\t);\n\t\treturn (\n\t\t\t<div className=\"search-wrap\">\n\t\t\t\t<section>\n\t\t\t\t\t<h1 className=\"main-title mb--1\">Search</h1>\n\t\t\t\t\t<div className=\"search-form\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\t\t\tvalue={this.state.searchTerm}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button className=\"search-btn\">\n\t\t\t\t\t\t\t<SearchIcon />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t{this.state.searchActive ? searchResults : trending}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nSearch = withRouter(Search);\n\nfunction SearchContainer(props) {\n\treturn <Search api={props.api} />;\n}\n\nconst mapStateToProps = function (state) {\n\treturn {\n\t\tapi: state.api,\n\t};\n};\n\nexport default connect(mapStateToProps)(SearchContainer);\n","/Users/ashleydyson/Documents/Petio/petio/frontend/src/pages/Actor.js",["211","212","213","214"],"import React from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Api from \"../data/Api\";\nimport MovieCard from \"../components/MovieCard\";\nimport TvCard from \"../components/TvCard\";\nimport Carousel from \"../components/Carousel\";\nimport { ReactComponent as Spinner } from \"../assets/svg/spinner.svg\";\n\nclass Actor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      bioOpen: false,\n    };\n\n    this.getActor = this.getActor.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.toggleBio = this.toggleBio.bind(this);\n  }\n  componentDidMount() {\n    let page = document.querySelectorAll(\".page-wrap\")[0];\n    page.scrollTop = 0;\n    window.scrollTo(0, 0);\n    let id = this.props.match.params.id;\n\n    this.getActor(id);\n  }\n\n  getActor(id) {\n    if (!this.props.api.person_lookup[id]) {\n      // check for cached\n      Api.person(id);\n    }\n  }\n\n  handleScroll(e) {\n    let banner = e.currentTarget.querySelectorAll(\".person--banner\")[0];\n    let poster = e.currentTarget.querySelectorAll(\".person--thumb--inner\")[0];\n    let offset = e.currentTarget.scrollTop > banner.offsetHeight ? 1 : e.currentTarget.scrollTop / banner.offsetHeight;\n    let posterOffset = 10 * offset;\n    offset = offset * 10 + 40;\n    banner.style.backgroundPosition = `50% ${offset}%`;\n    poster.style.transform = `translateY(${posterOffset}px)`;\n  }\n\n  sortByRanking(a, b) {\n    if (a.ranking < b.ranking) {\n      return 1;\n    }\n    if (a.ranking > b.ranking) {\n      return -1;\n    }\n    return 0;\n  }\n\n  processCredits(credits, items) {\n    for (let i in items) {\n      let item = items[i];\n      if (!credits[item.id]) {\n        let ranking = Math.round(item.popularity * item.vote_count);\n        item.ranking = ranking;\n        credits[item.id] = item;\n      }\n\n      if (item.job) {\n        if (credits[item.id].jobs) {\n          credits[item.id].jobs[item.job] = item.job;\n        } else {\n          credits[item.id].jobs = new Array();\n          credits[item.id].jobs[item.job] = item.job;\n        }\n      }\n      if (item.character) {\n        if (credits[item.id].characters) {\n          credits[item.id].characters[item.character] = item.character;\n        } else {\n          credits[item.id].characters = new Array();\n          credits[item.id].characters[item.character] = item.character;\n        }\n      }\n    }\n    return credits;\n  }\n\n  processCredit(item, personData) {\n    let credit = null;\n\n    if (personData.known_for_department !== \"Acting\") {\n      // Not actor\n      credit = item.jobs ? item.jobs : item.characters ? item.characters : null;\n    } else {\n      // actor\n      credit = item.characters ? item.characters : item.jobs ? item.jobs : null;\n    }\n\n    if (credit) {\n      let output = \"\";\n      for (let i in credit) {\n        output += `${credit[i]} / `;\n      }\n      credit = output;\n      credit = credit.substring(0, credit.length - 3);\n    }\n\n    return credit;\n  }\n\n  toggleBio() {\n    this.setState({\n      bioOpen: this.state.bioOpen ? false : true,\n    });\n  }\n\n  render() {\n    let id = this.props.match.params.id;\n    let personData = this.props.api.person_lookup[id];\n\n    if (!personData) {\n      return (\n        <div className=\"page-wrap\">\n          <div className=\"spinner\">\n            <Spinner />\n          </div>\n        </div>\n      );\n    }\n\n    let banner = false;\n    let bWidth = 0;\n\n    // Credits Movie\n    let movieCredits = this.props.api.actor_movie[id];\n    let moviesList = false;\n\n    if (movieCredits) {\n      moviesList = {};\n      moviesList = this.processCredits(moviesList, movieCredits.cast);\n      moviesList = this.processCredits(moviesList, movieCredits.crew);\n      moviesList = Object.values(moviesList);\n      moviesList.sort(this.sortByRanking);\n    }\n\n    // Credits TV\n    let tvCredits = this.props.api.actor_series[id];\n    let showsList = false;\n\n    if (tvCredits) {\n      showsList = {};\n      showsList = this.processCredits(showsList, tvCredits.cast);\n      showsList = this.processCredits(showsList, tvCredits.crew);\n      showsList = Object.values(showsList);\n      showsList.sort(this.sortByRanking);\n    }\n\n    if (!personData.images) {\n      banner = false;\n      bWidth = 0;\n    } else {\n      personData.images.profiles.forEach((image) => {\n        if (image.width > bWidth) {\n          banner = image;\n          bWidth = image.width;\n        }\n      });\n    }\n\n    return (\n      <>\n        <div className=\"page-wrap\" onScroll={this.handleScroll}>\n          <div className=\"person--wrap\">\n            <div\n              className=\"person--banner\"\n              style={{\n                backgroundImage: `url(https://image.tmdb.org/t/p/original/${banner.file_path})`,\n              }}\n            ></div>\n            <div className=\"person--top\">\n              <div className=\"person--thumb\">\n                <div className=\"person--thumb--inner\">\n                  <img src={`https://image.tmdb.org/t/p/w1280/${personData.profile_path}`} />\n                </div>\n              </div>\n              <div className=\"person--details\">\n                <h1 className=\"single-title\">{personData.name}</h1>\n                <p>{personData.place_of_birth}</p>\n                <p>{personData.known_for_department}</p>\n              </div>\n            </div>\n            <section>\n              <div className=\"person--bio\">\n                <h3 className=\"sub-title mb--1\">Biography</h3>\n                <div className={`bio ${this.state.bioOpen ? \"open\" : \"\"}`}>\n                  {personData.biography.split(\"\\n\").map((str, i) => (\n                    <p key={`bio-${i}`}>{str}</p>\n                  ))}\n                </div>\n                <p onClick={this.toggleBio} className=\"person--bio--read-more\">\n                  {this.state.bioOpen ? \"Read less\" : \"Read more\"}\n                </p>\n              </div>\n            </section>\n            {moviesList.length > 0 ? (\n              <section>\n                <h3 className=\"sub-title mb--1\">Movies</h3>\n                <Carousel>\n                  {Object.keys(moviesList).map((key, i) => {\n                    let result = moviesList[key];\n                    if (result.rating < 100) return null; // threshold to display\n                    return <MovieCard key={result.id + \"-cast-\" + i} movie={result} character={this.processCredit(result, personData)} />;\n                  })}\n                </Carousel>\n              </section>\n            ) : null}\n            {showsList.length > 0 ? (\n              <section>\n                <h3 className=\"sub-title mb--1\">TV</h3>\n                <Carousel>\n                  {Object.keys(showsList).map((key, i) => {\n                    let result = showsList[key];\n                    if (result.rating < 100) return null; // threshold to display\n                    return <TvCard key={result.id + \"-cast-\" + i} series={result} character={this.processCredit(result, personData)} />;\n                  })}\n                </Carousel>\n              </section>\n            ) : null}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nActor = withRouter(Actor);\n\nfunction ActorContainer(props) {\n  return <Actor api={props.api} />;\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    api: state.api,\n  };\n};\n\nexport default connect(mapStateToProps)(ActorContainer);\n","/Users/ashleydyson/Documents/Petio/petio/frontend/src/pages/Movie.js",[],"/Users/ashleydyson/Documents/Petio/petio/frontend/src/pages/Requests.js",["215","216"],"import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Api from '../data/Api';\nimport RequestCard from '../components/RequestCard';\nimport Carousel from '../components/Carousel';\n\nclass Requests extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\trequests: false,\n\t\t\tloaded: false,\n\t\t};\n\n\t\tthis.getRequests = this.getRequests.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tlet page = document.querySelectorAll('.page-wrap')[0];\n\t\tpage.scrollTop = 0;\n\t\twindow.scrollTo(0, 0);\n\t\tthis.getRequests();\n\t}\n\n\tcomponentDidUpdate() {\n\t\tlet requests = this.state.requests;\n\t\tif (!requests) {\n\t\t\tthis.getRequests();\n\t\t}\n\t}\n\n\tgetRequests() {\n\t\tlet requests = this.props.user.requests;\n\t\tif (!requests) return;\n\t\tthis.setState({\n\t\t\trequests: true,\n\t\t\tloaded: true,\n\t\t});\n\n\t\tObject.keys(requests).map((key) => {\n\t\t\tlet request = requests[key];\n\t\t\tif (request.type === 'movie') {\n\t\t\t\tApi.movie(key);\n\t\t\t} else {\n\t\t\t\tApi.series(key);\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\tif (!this.state.loaded) {\n\t\t\treturn (\n\t\t\t\t<div className=\"requests-page\">\n\t\t\t\t\t<h1 className=\"main-title\">Requests</h1>\n\t\t\t\t\t<div className=\"request-section\">\n\t\t\t\t\t\t<p className=\"sub-title\">Loading...</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\tlet requests = this.props.user.requests;\n\t\tlet pending = Object.keys(requests).map((key) => {\n\t\t\tlet request = this.props.api.movie_lookup[key];\n\t\t\tif (requests[key].type === 'tv') {\n\t\t\t\trequest = this.props.api.series_lookup[key];\n\t\t\t}\n\t\t\tif (!request) return null;\n\t\t\treturn <RequestCard key={key} request={request} />;\n\t\t});\n\t\trequests = this.props.user.requests;\n\t\tconsole.log(requests);\n\t\tlet yourRequests = Object.keys(requests).map((key) => {\n\t\t\tlet request = this.props.api.movie_lookup[key];\n\t\t\tif (requests[key].type === 'tv') {\n\t\t\t\trequest = this.props.api.series_lookup[key];\n\t\t\t}\n\t\t\tlet user = this.props.user.current.id;\n\n\t\t\tif (!request || !requests[key].users.includes(user)) return null;\n\t\t\treturn <RequestCard key={key + '_your'} request={request} />;\n\t\t});\n\t\treturn (\n\t\t\t<div className=\"requests-page\">\n\t\t\t\t<h1 className=\"main-title mb--1\">Requests</h1>\n\t\t\t\t<div className=\"request-section\">\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<h3 className=\"sub-title mb--1\">Pending Requests</h3>\n\t\t\t\t\t\t<Carousel>{pending}</Carousel>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"request-section\">\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<h3 className=\"sub-title mb--1\">Your Requests</h3>\n\t\t\t\t\t\t<Carousel>{yourRequests}</Carousel>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRequests = withRouter(Requests);\n\nfunction RequestsContainer(props) {\n\treturn <Requests api={props.api} user={props.user} />;\n}\n\nconst mapStateToProps = function (state) {\n\treturn {\n\t\tapi: state.api,\n\t\tuser: state.user,\n\t};\n};\n\nexport default connect(mapStateToProps)(RequestsContainer);\n","/Users/ashleydyson/Documents/Petio/petio/frontend/src/pages/Profile.js",["217","218","219","220","221","222","223","224"],"import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport User from '../data/User';\nimport History from '../components/History';\nimport { ReactComponent as ResIconHd } from '../assets/svg/720p.svg';\nimport { ReactComponent as ResIconFHd } from '../assets/svg/1080p.svg';\nimport { ReactComponent as ResIconUHd } from '../assets/svg/4k.svg';\n\nclass Profile extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\topen4kmodal: false,\n\t\t};\n\n\t\tthis.open4k = this.open4k.bind(this);\n\t\tthis.close4k = this.close4k.bind(this);\n\t}\n\tcomponentDidMount() {\n\t\tlet page = document.querySelectorAll('.page-wrap')[0];\n\t\tpage.scrollTop = 0;\n\t\twindow.scrollTo(0, 0);\n\t}\n\n\topen4k() {\n\t\tthis.setState({\n\t\t\topen4kmodal: true,\n\t\t});\n\t}\n\n\tclose4k() {\n\t\tthis.setState({\n\t\t\topen4kmodal: false,\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"profile-page\">\n\t\t\t\t<div\n\t\t\t\t\tclassName={`modal-4k-request ${\n\t\t\t\t\t\tthis.state.open4kmodal ? 'open' : ''\n\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"modal-4k-request--top\">\n\t\t\t\t\t\t<h3>Request 4K / UHD Access</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"modal-4k-request--content\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tAccess to 4K / UHD content is limited to users who\n\t\t\t\t\t\t\thave both the internet speed and devices to watch 4K\n\t\t\t\t\t\t\twithout buffering or the server trying to convert\n\t\t\t\t\t\t\tdown to a lower resolution.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tBefore processing your request make sure your device\n\t\t\t\t\t\t\tcan play HEVC (aka h.265) and your internet speed is\n\t\t\t\t\t\t\tabove 50mbps. Check your TV / device manual for\n\t\t\t\t\t\t\tinformation on video codecs and perform a speed test\n\t\t\t\t\t\t\tbelow.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<div className=\"modal-4k-request--speed\">\n\t\t\t\t\t\t\t<iframe src=\"https://www.metercustom.net/plugin/\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tPassed both criteria? Click below to request access.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"btn btn__square bad modal-4k-request--cancel\"\n\t\t\t\t\t\t\tonClick={this.close4k}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button className=\"modal-4k-request--submit btn btn__square\">\n\t\t\t\t\t\t\tRequest Access\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<h1 className=\"main-title mb--2\">Your Account</h1>\n\t\t\t\t<section>\n\t\t\t\t\t<div className=\"profile-overview\">\n\t\t\t\t\t\t<div className=\"profile-thumb\">\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"https://app.plex.tv/desktop#!/settings/account\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\tclassName=\"thumb\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackgroundImage:\n\t\t\t\t\t\t\t\t\t\t'url(' +\n\t\t\t\t\t\t\t\t\t\tthis.props.user.current.thumb +\n\t\t\t\t\t\t\t\t\t\t')',\n\t\t\t\t\t\t\t\t\tcolor: 'red',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></a>\n\t\t\t\t\t\t\t<div className=\"hover\">\n\t\t\t\t\t\t\t\t<p>Change</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"profile-info\">\n\t\t\t\t\t\t\t<h3 className=\"sub-title\">\n\t\t\t\t\t\t\t\t{this.props.user.current.username}\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t<p className=\"email\">\n\t\t\t\t\t\t\t\t{this.props.user.current.email}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p className=\"role\">\n\t\t\t\t\t\t\t\t{this.props.user.current.admin\n\t\t\t\t\t\t\t\t\t? 'Admin'\n\t\t\t\t\t\t\t\t\t: 'Friend'}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <div className=\"profile-access\">\n\t\t\t\t\t\t\t<h3 className=\"sub-title\">Content Access</h3>\n\t\t\t\t\t\t\t<div className=\"a-wrap\">\n\t\t\t\t\t\t\t\t<div className=\"a-720 a-icon\">\n\t\t\t\t\t\t\t\t\t<ResIconHd />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"a-1080 a-icon\">\n\t\t\t\t\t\t\t\t\t<ResIconFHd />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName={`a-4k a-icon ${\n\t\t\t\t\t\t\t\t\t\tthis.props.user.current.uhd\n\t\t\t\t\t\t\t\t\t\t\t? 'active'\n\t\t\t\t\t\t\t\t\t\t\t: 'disabled'\n\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<ResIconUHd />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{!this.props.user.current.uhd ? (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn__square request-access-4k mt--1\"\n\t\t\t\t\t\t\t\t\tonClick={this.open4k}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tRequest Access to UHD / 4K?\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t<div className=\"profile-logout\">\n\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\tclassName=\"logout sub-title\"\n\t\t\t\t\t\t\t\tonClick={this.props.logout}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t<History type=\"movie\" />\n\t\t\t\t<History type=\"show\" />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nProfile = withRouter(Profile);\n\nfunction ProfileContainer(props) {\n\treturn <Profile user={props.user} logout={props.logout} />;\n}\n\nconst mapStateToProps = function (state) {\n\treturn {\n\t\tuser: state.user,\n\t};\n};\n\nexport default connect(mapStateToProps)(ProfileContainer);\n","/Users/ashleydyson/Documents/Petio/petio/frontend/src/pages/Shows.js",["225"],"import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Api from '../data/Api';\nimport Popular from '../components/Popular';\nimport History from '../components/History';\nimport ShowCard from '../components/TvCard';\nimport Carousel from '../components/Carousel';\n\nclass Shows extends React.Component {\n\tcomponentDidMount() {\n\t\tlet page = document.querySelectorAll('.page-wrap')[0];\n\t\tpage.scrollTop = 0;\n\t\twindow.scrollTo(0, 0);\n\n\t\tif (!Object.keys(this.props.api.popular).length > 0) {\n\t\t\tApi.getPopular();\n\t\t}\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h1 className=\"main-title mb--1\">TV Shows</h1>\n\t\t\t\t<Popular type=\"show\" />\n\t\t\t\t<History type=\"show\" />\n\t\t\t\t<section>\n\t\t\t\t\t<h3 className=\"sub-title mb--1\">Trending Shows</h3>\n\t\t\t\t\t<Carousel>\n\t\t\t\t\t\t{Object.keys(this.props.api.popular).length > 0\n\t\t\t\t\t\t\t? this.props.api.popular.tv.map((tv) => {\n\t\t\t\t\t\t\t\t\treturn <ShowCard key={tv.id} series={tv} />;\n\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t</Carousel>\n\t\t\t\t</section>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nShows = withRouter(Shows);\n\nfunction MoviesContainer(props) {\n\treturn <Shows api={props.api} />;\n}\n\nconst mapStateToProps = function (state) {\n\treturn {\n\t\tapi: state.api,\n\t};\n};\n\nexport default connect(mapStateToProps)(MoviesContainer);\n","/Users/ashleydyson/Documents/Petio/petio/frontend/src/pages/Movies.js",["226"],"import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Api from '../data/Api';\nimport Popular from '../components/Popular';\nimport History from '../components/History';\nimport MovieCard from '../components/MovieCard';\nimport Carousel from '../components/Carousel';\n\nclass Movies extends React.Component {\n\tcomponentDidMount() {\n\t\tlet page = document.querySelectorAll('.page-wrap')[0];\n\t\tpage.scrollTop = 0;\n\t\twindow.scrollTo(0, 0);\n\n\t\tif (!Object.keys(this.props.api.popular).length > 0) {\n\t\t\tApi.getPopular();\n\t\t}\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h1 className=\"main-title mb--1\">Movies</h1>\n\t\t\t\t<Popular type=\"movie\" />\n\t\t\t\t<History type=\"movie\" />\n\t\t\t\t<section>\n\t\t\t\t\t<h3 className=\"sub-title mb--1\">Trending Movies</h3>\n\t\t\t\t\t<Carousel>\n\t\t\t\t\t\t{Object.keys(this.props.api.popular).length > 0\n\t\t\t\t\t\t\t? this.props.api.popular.movies.map((movie) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<MovieCard\n\t\t\t\t\t\t\t\t\t\t\tkey={movie.id}\n\t\t\t\t\t\t\t\t\t\t\tmovie={movie}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t</Carousel>\n\t\t\t\t</section>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nMovies = withRouter(Movies);\n\nfunction MoviesContainer(props) {\n\treturn <Movies api={props.api} />;\n}\n\nconst mapStateToProps = function (state) {\n\treturn {\n\t\tapi: state.api,\n\t};\n};\n\nexport default connect(mapStateToProps)(MoviesContainer);\n","/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/Sidebar.js",["227"],"import React from \"react\";\nimport { withRouter, Link, Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { ReactComponent as SearchIcon } from \"../assets/svg/search.svg\";\nimport { ReactComponent as MovieIcon } from \"../assets/svg/movie.svg\";\nimport { ReactComponent as TvIcon } from \"../assets/svg/tv.svg\";\nimport { ReactComponent as PersonIcon } from \"../assets/svg/people.svg\";\nimport { ReactComponent as RequestIcon } from \"../assets/svg/bookmark.svg\";\nimport { ReactComponent as AdminIcon } from \"../assets/svg/admin.svg\";\nimport { ReactComponent as BackIcon } from \"../assets/svg/back.svg\";\nimport pjson from \"../../package.json\";\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n  }\n\n  goBack() {\n    this.props.history.goBack();\n  }\n\n  render() {\n    let current = this.props.location.pathname;\n    let user = this.props.user.current;\n    return (\n      <div className=\"sidebar--inner\">\n        <Link to=\"/\" className=\"logo\">\n          <p className=\"logo-text\" title=\"Petio\">\n            Pet<span>io</span>\n          </p>\n        </Link>\n        {current === \"/\" || current.startsWith(\"/search/\") ? null : (\n          <div className=\"back-btn\" onClick={this.goBack}>\n            <BackIcon />\n          </div>\n        )}\n        <Link to=\"/user\" className={\"sidebar--user-mob \"}>\n          <div className=\"icon\">\n            <div\n              className=\"thumb\"\n              style={{\n                backgroundImage: \"url(\" + user.thumb + \")\",\n                color: \"red\",\n              }}\n            ></div>\n          </div>\n        </Link>\n        <div className=\"sidebar--scroll\">\n          <Link to=\"/user\" className={\"sidebar--item user-profile \" + (current === \"/user\" || current.startsWith(\"/user/\") ? \"active\" : \"\")}>\n            <p>{user.title}</p>\n            <div className=\"icon\">\n              <div\n                className=\"thumb\"\n                style={{\n                  backgroundImage: \"url(\" + user.thumb + \")\",\n                  color: \"red\",\n                }}\n              ></div>\n            </div>\n          </Link>\n          <Link to=\"/\" className={\"sidebar--item \" + (current === \"/\" || current.startsWith(\"/search/\") ? \"active\" : \"\")}>\n            <p>Search</p>\n            <div className=\"icon\">\n              <SearchIcon />\n            </div>\n          </Link>\n          <Link to=\"/movies\" className={\"sidebar--item \" + (current === \"/movies\" || current.startsWith(\"/movie/\") ? \"active\" : \"\")}>\n            <p>Movies</p>\n            <div className=\"icon\">\n              <MovieIcon />\n            </div>\n          </Link>\n          <Link to=\"/tv\" className={\"sidebar--item \" + (current === \"/tv\" || current.startsWith(\"/series/\") ? \"active\" : \"\")}>\n            <p>TV Shows</p>\n            <div className=\"icon\">\n              <TvIcon />\n            </div>\n          </Link>\n          <Link to=\"/people\" className={\"sidebar--item \" + (current === \"/people\" || current.startsWith(\"/person/\") ? \"active\" : \"\")}>\n            <p>People</p>\n            <div className=\"icon\">\n              <PersonIcon />\n            </div>\n          </Link>\n          <Link to=\"/requests\" className={\"sidebar--item \" + (current === \"/requests\" || current.startsWith(\"/requests/\") ? \"active\" : \"\")}>\n            <p>Requests</p>\n            <div className=\"icon\">\n              <RequestIcon />\n            </div>\n          </Link>\n          <a className=\"sidebar--item\" href={`${window.location.protocol}//${window.location.host}${window.location.pathname === \"/\" ? \"\" : window.location.pathname}/admin/`}>\n            <p>Admin</p>\n            <div className=\"icon\">\n              <AdminIcon />\n            </div>\n          </a>\n        </div>\n        <p className=\"sidebar--version\">version {pjson.version}</p>\n      </div>\n    );\n  }\n}\n\nSidebar = withRouter(Sidebar);\n\nfunction SidebarContainer(props) {\n  return <Sidebar api={props.api} user={props.user} />;\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    api: state.api,\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps)(SidebarContainer);\n","/Users/ashleydyson/Documents/Petio/petio/frontend/src/pages/Series.js",["228","229","230","231","232","233","234","235","236","237","238","239"],"/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/reducers.js",[],"/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/Plex/index.js",["240"],"import { plexAuth } from './actions';\n\nexport default {\n\tplexAuth,\n};\n","/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/User/index.js",["241"],"import {\n  login,\n  // loginAdmin,\n  logout,\n  request,\n  getRequests,\n  review,\n  getReviews,\n  addIssue,\n} from \"./actions\";\n\nexport default {\n  login,\n  // loginAdmin,\n  logout,\n  request,\n  getRequests,\n  review,\n  getReviews,\n  addIssue,\n};\n","/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/Api/index.js",["242"],"import {\n\tgetPopular,\n\tmovie,\n\tseries,\n\tsearch,\n\tclearSearch,\n\tperson,\n\ttop,\n\thistory,\n\tget_plex_media,\n\tcheckConfig,\n} from './actions';\n\nexport default {\n\tgetPopular,\n\tmovie,\n\tseries,\n\tsearch,\n\tclearSearch,\n\tperson,\n\ttop,\n\thistory,\n\tget_plex_media,\n\tcheckConfig,\n};\n","/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/actionTypes.js",[],"/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/MovieCard.js",[],"/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/PersonCard.js",[],"/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/CarouselLoading.js",[],"/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/Review.js",[],"/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/CarouselLoadingPerson.js",[],"/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/MovieShowLoading.js",["243","244"],"import React from \"react\";\nimport CarouselLoading from \"../components/CarouselLoading\";\nimport CarouselLoadingPerson from \"../components/CarouselLoadingPerson\";\n\nclass MovieShowLoading extends React.Component {\n  render() {\n    return (\n      <div className=\"media-wrap\">\n        <div className=\"media-top\">\n          <div className=\"media-backdrop\">\n            <div className=\"no-backdrop\"></div>\n          </div>\n          <div className=\"media-poster\">\n            <div className=\"media-poster--inner\"></div>\n          </div>\n          <div className=\"media-details\">\n            <span></span>\n            <div className=\"media-details--top\">\n              <div className=\"media-logo placeholder\"></div>\n            </div>\n            <div className=\"media--actions\">\n              <div className=\"btn btn__square placeholder\"></div>\n              <div className=\"btn btn__square placeholder\"></div>\n            </div>\n          </div>\n        </div>\n        <div className=\"media-content\">\n          <section>\n            <div className=\"quick-view\">\n              <div className=\"side-content\">\n                <div className=\"media-action\">\n                  <div className=\"btn btn__square placeholder\"></div>\n                  <div className=\"btn btn__square placeholder\"></div>\n                </div>\n              </div>\n              <div className=\"detail--wrap\">\n                <div className=\"detail--content\">\n                  <div className=\"detail--bar\">\n                    <div className=\"details text-placeholder\"></div>\n                  </div>\n                  <div className=\"genre--wrap\">\n                    <div className=\"genre--item genre-placeholder\"></div>\n                    <div className=\"genre--item genre-placeholder\"></div>\n                    <div className=\"genre--item genre-placeholder\"></div>\n                    <div className=\"genre--item genre-placeholder\"></div>\n                  </div>\n                  <div className=\"media--actions__mob mob-btn-placeholder\">\n                    <div className=\"btn btn__square placeholder\"></div>\n                    <div className=\"btn btn__square placeholder\"></div>\n                    <div className=\"btn btn__square placeholder\"></div>\n                  </div>\n                  <div className=\"media-crew\">\n                    <div className=\"media-crew--item text-placeholder\"></div>\n                    <div className=\"media-crew--item text-placeholder\"></div>\n                  </div>\n                  <div className=\"sub-title mb--1 text-placeholder\"></div>\n                  <div className=\"overview text-placeholder\"></div>\n                </div>\n              </div>\n            </div>\n          </section>\n          <section>\n            <h3 className=\"sub-title mb--1 text-placeholder\"></h3>\n            <CarouselLoadingPerson />\n          </section>\n          <section>\n            <h3 className=\"sub-title mb--1 text-placeholder\"></h3>\n            <CarouselLoading />\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieShowLoading;\n","/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/ReviewsLists.js",["245"],"import React from \"react\";\nimport { ReactComponent as StarIcon } from \"../assets/svg/star.svg\";\nimport User from \"../data/User\";\nimport dateFormat from \"dateformat\";\nimport { getAuth } from \"../data/auth\";\n\nclass ReviewsList extends React.Component {\n  render() {\n    return (\n      <div className=\"reviews-list--wrap\">\n        {this.props.reviews\n          ? this.props.reviews.length > 0\n            ? this.props.reviews.map((review) => {\n                let stars = [];\n                for (let i = 0; i < 10; i++) {\n                  stars.push(\n                    <div key={`${review._id}__${i}`} className={`stars-1 star ${review.score > i ? \"active\" : \"\"}`}>\n                      <StarIcon />\n                    </div>\n                  );\n                }\n                let thumb = `${getAuth().api}/user/thumb/${review.user}`;\n                return (\n                  <div className=\"reviews-list--item\" key={review._id}>\n                    <div className=\"reviews-list--thumb\">\n                      <div\n                        className=\"thumb\"\n                        style={{\n                          backgroundImage: \"url(\" + thumb + \")\",\n                        }}\n                      ></div>\n                    </div>\n                    <div className=\"reviews-list--content\">\n                      <p className=\"small\">{dateFormat(review.date, \"dddd, mmmm dS, yyyy, h:MMtt\")}</p>\n                      <div className=\"stars-wrap\">{stars}</div>\n                      <p className=\"small capped-width__wide content-cap\">{review.comment}</p>\n                    </div>\n                  </div>\n                );\n              })\n            : null\n          : null}\n        {this.props.external\n          ? this.props.external.map((review) => {\n              let stars = [];\n              if (review.author_details.rating !== null) {\n                for (let i = 0; i < 10; i++) {\n                  stars.push(\n                    <div key={`${review.id}__${i}`} className={`stars-1 star ${review.author_details.rating > i ? \"active\" : \"\"}`}>\n                      <StarIcon />\n                    </div>\n                  );\n                }\n              }\n              let thumb = `https://www.themoviedb.org/t/p/w128_and_h128_face${review.author_details.avatar_path}`;\n\n              let text = review.content;\n              text = text.replace(/\\*\\*\\*(.*?)\\*\\*\\*/g, '<span style=\"display: block; margin: 0\"><b>$1</b></span>');\n              text = text.replace(/\\*\\*(.*?)\\*\\*/g, \"<b>$1</b>\");\n              text = text.replace(/__(.*?)__/g, \"<u>$1</u>\");\n              text = text.replace(/_/g, \" \");\n              text = text.replace(/~~(.*?)~~/g, \"<i>$1</i>\");\n              text = text.replace(/--(.*?)--/g, \" ($1) \");\n              text = text.replace(/<<(.*?)>>/g, \"<a href='$1'>Link</a>\");\n              return (\n                <div className=\"reviews-list--item\" key={review.id}>\n                  <div className=\"reviews-list--thumb\">\n                    <div\n                      className=\"thumb\"\n                      style={{\n                        backgroundImage: \"url(\" + thumb + \")\",\n                      }}\n                    ></div>\n                  </div>\n                  <div className=\"reviews-list--content\">\n                    <p className=\"small\">{dateFormat(review.updated_at, \"dddd, mmmm dS, yyyy, h:MMtt\")}</p>\n                    <div className=\"stars-wrap\">{stars}</div>\n                    <p className=\"small capped-width__wide content-cap\" dangerouslySetInnerHTML={{ __html: text }}></p>\n                  </div>\n                </div>\n              );\n            })\n          : null}\n        {this.props.external ? this.props.external.length === 0 && this.props.reviews.length === 0 ? <p>No reviews</p> : null : null}\n      </div>\n    );\n  }\n}\n\nexport default ReviewsList;\n","/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/TvCard.js",[],"/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/Carousel.js",[],"/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/RequestCard.js",[],"/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/History.js",["246"],"import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Api from '../data/Api';\n// import User from '../data/User'\nimport MovieCard from './MovieCard';\nimport Carousel from './Carousel';\nimport TvCard from './TvCard';\nimport CarouselLoading from './CarouselLoading';\n\nclass History extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tlibraries: this.props.user.library_index,\n\t\t\tcredentials: false,\n\t\t\thistoryData: false,\n\t\t\tuser: false,\n\t\t\ttext: 'Loading',\n\t\t};\n\n\t\tthis.getHistory = this.getHistory.bind(this);\n\t\tthis.init = this.init.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.init();\n\t}\n\n\t// componentDidUpdate() {\n\t// \tthis.init();\n\t// }\n\n\tinit() {\n\t\tif (!this.state.historyData) {\n\t\t\tthis.getHistory();\n\t\t}\n\t}\n\n\tgetHistory() {\n\t\tthis.setState({\n\t\t\thistoryData: [],\n\t\t});\n\t\tApi.history(\n\t\t\tthis.props.user.current.altId\n\t\t\t\t? this.props.user.current.altId\n\t\t\t\t: this.props.user.current.id,\n\t\t\tthis.props.type\n\t\t)\n\t\t\t.then((res) => {\n\t\t\t\tif (Object.keys(res).length === 0) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\ttext: 'No history from the last 2 weeks.',\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tlet historyData = res;\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\thistoryData: historyData,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tthis.setState({\n\t\t\t\t\ttext: 'No history from the last 2 weeks.',\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\trender() {\n\t\t// let libraries = this.props.user.library_index;\n\t\tif (this.props.type === 'movie') {\n\t\t\tlet historyData = (\n\t\t\t\t<>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<h3 className=\"sub-title mb--1\">\n\t\t\t\t\t\t\tRecently Viewed by You\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tBe sure to review movies you watched to help other\n\t\t\t\t\t\t\tusers decide what to watch!\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t{Object.keys(this.state.historyData).length > 0 ? (\n\t\t\t\t\t\t\t<Carousel>\n\t\t\t\t\t\t\t\t{Object.keys(this.state.historyData).map(\n\t\t\t\t\t\t\t\t\t(t) => {\n\t\t\t\t\t\t\t\t\t\t// console.log(this.state.historyData[t]);\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t!this.state.historyData[t].id ||\n\t\t\t\t\t\t\t\t\t\t\tthis.state.historyData[t].id ===\n\t\t\t\t\t\t\t\t\t\t\t\t'false'\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<MovieCard\n\t\t\t\t\t\t\t\t\t\t\t\tkey={\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state.historyData[t].id\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tmovie={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tid: this.state.historyData[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tt\n\t\t\t\t\t\t\t\t\t\t\t\t\t].id,\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Carousel>\n\t\t\t\t\t\t) : this.state.text === 'Loading' ? (\n\t\t\t\t\t\t\t<CarouselLoading />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<p>{this.state.text}</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</section>\n\t\t\t\t</>\n\t\t\t);\n\t\t\treturn historyData;\n\t\t} else {\n\t\t\tlet showHistory = (\n\t\t\t\t<>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<h3 className=\"sub-title mb--1\">\n\t\t\t\t\t\t\tRecently Viewed by You\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tBe sure to review shows you watched to help other\n\t\t\t\t\t\t\tusers decide what to watch!\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t{Object.keys(this.state.historyData).length > 0 ? (\n\t\t\t\t\t\t\t<Carousel>\n\t\t\t\t\t\t\t\t{Object.keys(this.state.historyData).map(\n\t\t\t\t\t\t\t\t\t(t) => {\n\t\t\t\t\t\t\t\t\t\t// console.log(this.state.historyData[t]);\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t!this.state.historyData[t].id ||\n\t\t\t\t\t\t\t\t\t\t\tthis.state.historyData[t].id ===\n\t\t\t\t\t\t\t\t\t\t\t\t'false'\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<TvCard\n\t\t\t\t\t\t\t\t\t\t\t\tkey={\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state.historyData[t].id\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tseries={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tid: this.state.historyData[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tt\n\t\t\t\t\t\t\t\t\t\t\t\t\t].id,\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Carousel>\n\t\t\t\t\t\t) : this.state.text === 'Loading' ? (\n\t\t\t\t\t\t\t<CarouselLoading />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<p>{this.state.text}</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</section>\n\t\t\t\t</>\n\t\t\t);\n\t\t\treturn showHistory;\n\t\t}\n\t}\n}\n\nHistory = withRouter(History);\n\nfunction HistoryContainer(props) {\n\treturn <History user={props.user} type={props.type} />;\n}\n\nconst mapStateToProps = function (state) {\n\treturn {\n\t\tuser: state.user,\n\t};\n};\n\nexport default connect(mapStateToProps)(HistoryContainer);\n","/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/User/reducer.js",["247"],"import * as types from '../actionTypes';\n\nexport default function (\n\tstate = {\n\t\tcurrent: false,\n\t\tlogged_in: false,\n\t\tcredentials: false,\n\t\tlibrary_index: false,\n\t\trequests: false,\n\t\temail: false,\n\t},\n\taction\n) {\n\tswitch (action.type) {\n\t\tcase types.LOGIN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrent: action.data.user,\n\t\t\t\tlogged_in: true,\n\t\t\t};\n\n\t\tcase types.LOGOUT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrent: false,\n\t\t\t\tlogged_in: false,\n\t\t\t\tcredentials: false,\n\t\t\t};\n\n\t\tcase types.CREDENTIALS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcredentials: action.credentials,\n\t\t\t};\n\n\t\tcase types.CREDENTIALS_EMAIL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\temail: action.credentials,\n\t\t\t};\n\n\t\tcase types.LIBRARIES_INDEX:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlibrary_index: action.libraries,\n\t\t\t};\n\n\t\tcase types.LOGIN_ADMIN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlogged_in: true,\n\t\t\t\tcredentials: {\n\t\t\t\t\tplexToken: action.credentials.token,\n\t\t\t\t},\n\t\t\t\tcurrent: action.credentials.username,\n\t\t\t};\n\n\t\tcase types.GET_REQUESTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trequests: action.requests,\n\t\t\t};\n\n\t\tcase types.GET_REVIEWS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\treviews: {\n\t\t\t\t\t...state.reviews,\n\t\t\t\t\t[action.id]: action.reviews,\n\t\t\t\t},\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/Plex/reducer.js",["248"],"import * as types from '../actionTypes';\n\nexport default function (\n\tstate = {\n\t\ttoken: false,\n\t},\n\taction\n) {\n\tswitch (action.type) {\n\t\tcase types.PLEX_TOKEN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttoken: action.token,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/Api/reducer.js",["249"],"import * as types from '../actionTypes';\n\nexport default function (\n\tstate = {\n\t\tuser_roles: {\n\t\t\tpermissions: [],\n\t\t\trules: [],\n\t\t\tseen_clients: [],\n\t\t\tblocked_clients: [],\n\t\t\tid: false,\n\t\t\tusername: false,\n\t\t\towner: false,\n\t\t\t__v: 0,\n\t\t},\n\t\tlogged_in: false,\n\t\tservers: false,\n\t\tconfig: 'pending',\n\t\tactiveServer: false,\n\t\tpopular: {},\n\t\tmovie_lookup: {},\n\t\tseries_lookup: {},\n\t\tseason_lookup: {},\n\t\tperson_lookup: {},\n\t\tsearch_results: {\n\t\t\tmovies: [],\n\t\t\tseries: [],\n\t\t\tpeople: [],\n\t\t},\n\t\tactor_movie: {},\n\t\tactor_series: {},\n\t},\n\taction\n) {\n\tswitch (action.type) {\n\t\tcase types.MB_LOGIN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrent_user: {\n\t\t\t\t\tusername: action.username,\n\t\t\t\t\temail: action.email,\n\t\t\t\t\tthumb: action.thumb,\n\t\t\t\t},\n\t\t\t\tservers: action.servers,\n\t\t\t\tlogged_in: true,\n\t\t\t};\n\n\t\tcase types.MB_USER_ROLES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuser_roles: action.user,\n\t\t\t};\n\n\t\tcase types.MB_CONFIG_SETUP_START:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tconfig: false,\n\t\t\t};\n\n\t\tcase types.MB_CONFIG_LOADED:\n\t\tcase types.MB_CONFIG_SETUP_END:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tconfig: action.config,\n\t\t\t};\n\n\t\tcase types.MB_ACTIVE_SERVER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactiveServer: action.server,\n\t\t\t};\n\n\t\tcase types.POPULAR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpopular: action.popular,\n\t\t\t\tupdated: true,\n\t\t\t};\n\n\t\tcase types.SEARCH:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsearch_results: {\n\t\t\t\t\tmovies: action.movies,\n\t\t\t\t\tseries: action.series,\n\t\t\t\t\tpeople: action.people,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase types.MOVIE_LOOKUP:\n\t\t\tlet creditCache = {};\n\t\t\tif (action.movie) {\n\t\t\t\tif (action.movie.credits) {\n\t\t\t\t\tObject.keys(action.movie.credits).forEach((key) => {\n\t\t\t\t\t\tObject.keys(action.movie.credits[key]).forEach(\n\t\t\t\t\t\t\t(skey) => {\n\t\t\t\t\t\t\t\tcreditCache[\n\t\t\t\t\t\t\t\t\taction.movie.credits[key][skey].id\n\t\t\t\t\t\t\t\t] = action.movie.credits[key][skey];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmovie_lookup: {\n\t\t\t\t\t...state.movie_lookup,\n\t\t\t\t\t[action.id]: action.movie,\n\t\t\t\t},\n\t\t\t\tactor_cache: {\n\t\t\t\t\tcreditCache,\n\t\t\t\t},\n\t\t\t\tupdated: true,\n\t\t\t};\n\n\t\tcase types.PERSON_LOOKUP:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tperson_lookup: {\n\t\t\t\t\t...state.movie_lookup,\n\t\t\t\t\t[action.id]: action.person,\n\t\t\t\t},\n\t\t\t\tupdated: true,\n\t\t\t};\n\n\t\tcase types.SERIES_LOOKUP:\n\t\t\tlet creditCacheS = {};\n\t\t\tif (action.series)\n\t\t\t\tif (action.series.credits) {\n\t\t\t\t\tObject.keys(action.series.credits).forEach((key) => {\n\t\t\t\t\t\tObject.keys(action.series.credits[key]).forEach(\n\t\t\t\t\t\t\t(skey) => {\n\t\t\t\t\t\t\t\tcreditCacheS[\n\t\t\t\t\t\t\t\t\taction.series.credits[key][skey].id\n\t\t\t\t\t\t\t\t] = action.series.credits[key][skey];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tseries_lookup: {\n\t\t\t\t\t...state.series_lookup,\n\t\t\t\t\t[action.id]: action.series,\n\t\t\t\t},\n\t\t\t\tactor_cache: {\n\t\t\t\t\tcreditCacheS,\n\t\t\t\t},\n\t\t\t\tupdated: true,\n\t\t\t};\n\n\t\tcase types.SEASON_LOOKUP:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tseason_lookup: {\n\t\t\t\t\t...state.season_lookup,\n\t\t\t\t\t[`${action.series}_s${action.season}`]: action.data,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase types.STORE_ACTOR_MOVIE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactor_movie: {\n\t\t\t\t\t...state.actor_movie,\n\t\t\t\t\t[action.id]: {\n\t\t\t\t\t\tcast: action.cast,\n\t\t\t\t\t\tcrew: action.crew,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tupdated: true,\n\t\t\t};\n\n\t\tcase types.STORE_ACTOR_SERIES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactor_series: {\n\t\t\t\t\t...state.actor_series,\n\t\t\t\t\t[action.id]: {\n\t\t\t\t\t\tcast: action.cast,\n\t\t\t\t\t\tcrew: action.crew,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tupdated: true,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/Popular.js",["250","251","252"],"import React from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Plex from \"../data/Plex\";\nimport Api from \"../data/Api\";\n// import User from '../data/User'\nimport MovieCard from \"./MovieCard\";\nimport TvCard from \"./TvCard\";\nimport Carousel from \"./Carousel\";\nimport CarouselLoading from \"./CarouselLoading\";\n\nclass Popular extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      libraries: this.props.user.library_index,\n      credentials: false,\n      topData: false,\n    };\n\n    this.getTop = this.getTop.bind(this);\n    this.init = this.init.bind(this);\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  // componentDidUpdate() {\n  // \tthis.init();\n  // }\n\n  init() {\n    if (!this.state.topData) {\n      this.getTop(\"movies\");\n    }\n  }\n\n  getTop() {\n    Api.top(this.props.type)\n      .then((res) => {\n        this.setState({\n          topData: res,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    if (this.props.type === \"movie\") {\n      let topData = (\n        <>\n          <section>\n            <h3 className=\"sub-title mb--1\">Popular on Plex</h3>\n            <p>What's popular on plex right now. The numbers indicate number of plays in the past month.</p>\n            {this.state.topData ? (\n              <Carousel>\n                {Object.keys(this.state.topData).map((t) => {\n                  if (!this.state.topData[t].item.tmdb_id || this.state.topData[t].item.tmdb_id === \"false\") {\n                    return null;\n                  }\n                  return (\n                    <MovieCard\n                      key={t}\n                      key={this.state.topData[t].item.tmdb_id}\n                      movie={{\n                        id: this.state.topData[t].item.tmdb_id,\n                      }}\n                      popular_count={this.state.topData[t].globalViewCount}\n                    />\n                  );\n                })}\n              </Carousel>\n            ) : (\n              <CarouselLoading />\n            )}\n          </section>\n        </>\n      );\n      return topData;\n    } else {\n      let topShows = (\n        <>\n          <section>\n            <h3 className=\"sub-title mb--1\">Popular on Plex</h3>\n            <p>What's popular on plex right now. The numbers indicate number of plays in the past month.</p>\n            {this.state.topData ? (\n              <Carousel>\n                {Object.keys(this.state.topData).map((t) => {\n                  if (!this.state.topData[t].item.tmdb_id || this.state.topData[t].item.tmdb_id === \"false\") {\n                    return null;\n                  }\n                  return (\n                    <TvCard\n                      key={this.state.topData[t].id}\n                      series={{\n                        id: this.state.topData[t].item.tmdb_id,\n                      }}\n                      popular_count={this.state.topData[t].globalViewCount}\n                    />\n                  );\n                })}\n              </Carousel>\n            ) : (\n              <CarouselLoading />\n            )}\n          </section>\n        </>\n      );\n      return topShows;\n    }\n  }\n}\n\nPopular = withRouter(Popular);\n\nfunction PopularContainer(props) {\n  return <Popular user={props.user} type={props.type} />;\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps)(PopularContainer);\n","/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/Plex/actions.js",[],"/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/User/actions.js",[],"/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/Api/actions.js",[],"/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/User/api.js",[],"/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/Plex/api.js",[],"/Users/ashleydyson/Documents/Petio/petio/frontend/src/data/Api/api.js",[],"/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/MovieShowTop.js",["253"],"/Users/ashleydyson/Documents/Petio/petio/frontend/src/components/MovieShowOverview.js",["254","255","256"],{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","severity":1,"message":"262","line":2,"column":37,"nodeType":"263","messageId":"264","endLine":2,"endColumn":41},{"ruleId":"261","severity":1,"message":"265","line":2,"column":43,"nodeType":"263","messageId":"264","endLine":2,"endColumn":53},{"ruleId":"261","severity":1,"message":"266","line":2,"column":55,"nodeType":"263","messageId":"264","endLine":2,"endColumn":65},{"ruleId":"261","severity":1,"message":"267","line":4,"column":8,"nodeType":"263","messageId":"264","endLine":4,"endColumn":12},{"ruleId":"261","severity":1,"message":"268","line":180,"column":9,"nodeType":"263","messageId":"264","endLine":180,"endColumn":13},{"ruleId":"261","severity":1,"message":"262","line":2,"column":22,"nodeType":"263","messageId":"264","endLine":2,"endColumn":26},{"ruleId":"261","severity":1,"message":"269","line":7,"column":8,"nodeType":"263","messageId":"264","endLine":7,"endColumn":25},{"ruleId":"261","severity":1,"message":"270","line":31,"column":9,"nodeType":"263","messageId":"264","endLine":31,"endColumn":15},{"ruleId":"271","severity":1,"message":"272","line":124,"column":25,"nodeType":"273","endLine":124,"endColumn":140},{"ruleId":"261","severity":1,"message":"262","line":2,"column":22,"nodeType":"263","messageId":"264","endLine":2,"endColumn":26},{"ruleId":"261","severity":1,"message":"262","line":2,"column":22,"nodeType":"263","messageId":"264","endLine":2,"endColumn":26},{"ruleId":"274","severity":1,"message":"275","line":71,"column":35,"nodeType":"276","messageId":"277","endLine":71,"endColumn":46},{"ruleId":"274","severity":1,"message":"275","line":79,"column":41,"nodeType":"276","messageId":"277","endLine":79,"endColumn":52},{"ruleId":"271","severity":1,"message":"272","line":182,"column":19,"nodeType":"273","endLine":182,"endColumn":94},{"ruleId":"261","severity":1,"message":"262","line":2,"column":22,"nodeType":"263","messageId":"264","endLine":2,"endColumn":26},{"ruleId":"278","severity":1,"message":"279","line":42,"column":35,"nodeType":"280","messageId":"281","endLine":42,"endColumn":37},{"ruleId":"261","severity":1,"message":"262","line":2,"column":22,"nodeType":"263","messageId":"264","endLine":2,"endColumn":26},{"ruleId":"261","severity":1,"message":"282","line":4,"column":8,"nodeType":"263","messageId":"264","endLine":4,"endColumn":12},{"ruleId":"261","severity":1,"message":"283","line":6,"column":28,"nodeType":"263","messageId":"264","endLine":6,"endColumn":37},{"ruleId":"261","severity":1,"message":"284","line":7,"column":28,"nodeType":"263","messageId":"264","endLine":7,"endColumn":38},{"ruleId":"261","severity":1,"message":"285","line":8,"column":28,"nodeType":"263","messageId":"264","endLine":8,"endColumn":38},{"ruleId":"286","severity":1,"message":"287","line":65,"column":8,"nodeType":"273","endLine":65,"endColumn":60},{"ruleId":"288","severity":1,"message":"289","line":85,"column":8,"nodeType":"273","endLine":96,"endColumn":9},{"ruleId":"290","severity":1,"message":"291","line":87,"column":9,"nodeType":"292","endLine":87,"endColumn":24},{"ruleId":"261","severity":1,"message":"262","line":2,"column":22,"nodeType":"263","messageId":"264","endLine":2,"endColumn":26},{"ruleId":"261","severity":1,"message":"262","line":2,"column":22,"nodeType":"263","messageId":"264","endLine":2,"endColumn":26},{"ruleId":"261","severity":1,"message":"293","line":2,"column":28,"nodeType":"263","messageId":"264","endLine":2,"endColumn":34},{"ruleId":"261","severity":1,"message":"294","line":8,"column":28,"nodeType":"263","messageId":"264","endLine":8,"endColumn":39},{"ruleId":"261","severity":1,"message":"295","line":9,"column":28,"nodeType":"263","messageId":"264","endLine":9,"endColumn":38},{"ruleId":"261","severity":1,"message":"296","line":10,"column":28,"nodeType":"263","messageId":"264","endLine":10,"endColumn":37},{"ruleId":"261","severity":1,"message":"297","line":11,"column":28,"nodeType":"263","messageId":"264","endLine":11,"endColumn":37},{"ruleId":"261","severity":1,"message":"298","line":13,"column":28,"nodeType":"263","messageId":"264","endLine":13,"endColumn":39},{"ruleId":"261","severity":1,"message":"299","line":14,"column":28,"nodeType":"263","messageId":"264","endLine":14,"endColumn":44},{"ruleId":"261","severity":1,"message":"300","line":15,"column":10,"nodeType":"263","messageId":"264","endLine":15,"endColumn":23},{"ruleId":"301","severity":1,"message":"302","line":218,"column":75,"nodeType":"303","messageId":"304","endLine":218,"endColumn":77},{"ruleId":"261","severity":1,"message":"305","line":223,"column":9,"nodeType":"263","messageId":"264","endLine":223,"endColumn":18},{"ruleId":"278","severity":1,"message":"279","line":251,"column":84,"nodeType":"280","messageId":"281","endLine":251,"endColumn":86},{"ruleId":"261","severity":1,"message":"306","line":255,"column":11,"nodeType":"263","messageId":"264","endLine":255,"endColumn":21},{"ruleId":"261","severity":1,"message":"307","line":258,"column":11,"nodeType":"263","messageId":"264","endLine":258,"endColumn":24},{"ruleId":"308","severity":1,"message":"309","line":3,"column":1,"nodeType":"310","endLine":5,"endColumn":3},{"ruleId":"308","severity":1,"message":"309","line":12,"column":1,"nodeType":"310","endLine":21,"endColumn":3},{"ruleId":"308","severity":1,"message":"309","line":14,"column":1,"nodeType":"310","endLine":25,"endColumn":3},{"ruleId":"311","severity":1,"message":"312","line":63,"column":13,"nodeType":"273","endLine":63,"endColumn":62},{"ruleId":"311","severity":1,"message":"312","line":67,"column":13,"nodeType":"273","endLine":67,"endColumn":62},{"ruleId":"261","severity":1,"message":"282","line":3,"column":8,"nodeType":"263","messageId":"264","endLine":3,"endColumn":12},{"ruleId":"261","severity":1,"message":"262","line":2,"column":22,"nodeType":"263","messageId":"264","endLine":2,"endColumn":26},{"ruleId":"308","severity":1,"message":"313","line":3,"column":1,"nodeType":"310","endLine":76,"endColumn":2},{"ruleId":"308","severity":1,"message":"313","line":3,"column":1,"nodeType":"310","endLine":19,"endColumn":2},{"ruleId":"308","severity":1,"message":"313","line":3,"column":1,"nodeType":"310","endLine":192,"endColumn":2},{"ruleId":"261","severity":1,"message":"262","line":2,"column":22,"nodeType":"263","messageId":"264","endLine":2,"endColumn":26},{"ruleId":"261","severity":1,"message":"267","line":4,"column":8,"nodeType":"263","messageId":"264","endLine":4,"endColumn":12},{"ruleId":"314","severity":1,"message":"315","line":68,"column":23,"nodeType":"292","endLine":68,"endColumn":63},{"ruleId":"286","severity":1,"message":"287","line":46,"column":15,"nodeType":"273","endLine":51,"endColumn":16},{"ruleId":"301","severity":1,"message":"302","line":174,"column":77,"nodeType":"303","messageId":"304","endLine":174,"endColumn":79},{"ruleId":"278","severity":1,"message":"279","line":179,"column":86,"nodeType":"280","messageId":"281","endLine":179,"endColumn":88},{"ruleId":"278","severity":1,"message":"279","line":187,"column":46,"nodeType":"280","messageId":"281","endLine":187,"endColumn":48},"no-native-reassign",["316"],"no-negated-in-lhs",["317"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","'useHistory' is defined but never used.","'Plex' is defined but never used.","'user' is assigned a value but never used.","'MovieShowOverview' is defined but never used.","'season' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'User' is defined but never used.","'ResIconHd' is defined but never used.","'ResIconFHd' is defined but never used.","'ResIconUHd' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Router' is defined but never used.","'RequestIcon' is defined but never used.","'ReportIcon' is defined but never used.","'WatchIcon' is defined but never used.","'CheckIcon' is defined but never used.","'TrailerIcon' is defined but never used.","'PersonCircleIcon' is defined but never used.","'LazyLoadImage' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'reviewBtn' is assigned a value but never used.","'userRating' is assigned a value but never used.","'userRatingVal' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","Unexpected default export of anonymous function","react/jsx-no-duplicate-props","No duplicate props allowed","no-global-assign","no-unsafe-negation"]